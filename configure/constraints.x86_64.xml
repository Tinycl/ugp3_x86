<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="http://www.cad.polito.it/ugp3/transforms/constraintsScripted.xslt"?>
<constraints
	xmlns="http://www.cad.polito.it/ugp3/schemas/constraints" 
	id="One-Max" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	schemaLocation="http://www.cad.polito.it/ugp3/schemas/constraints http://www.cad.polito.it/ugp3/schemas/constraints.xsd">
	<typeDefinitions>

		<item type="constant" name="r8">
			<value>%al</value>
			<value>%bl</value>
			<value>%cl</value>
			<value>%dl</value>
			<value>%sil</value>
			<value>%dil</value>
			<!-- <value>%bpl</value> -->
			<!-- <value>%spl</value> -->
			<value>%r8b</value>
			<value>%r9b</value>
			<value>%r10b</value>
			<value>%r11b</value>
			<value>%r12b</value>
			<value>%r13b</value>
			<value>%r14b</value>
			<value>%r15b</value>
		</item>
		<item type="constant" name="r16">
			<value>%ax</value>
			<value>%bx</value>
			<value>%cx</value>
			<value>%dx</value>
			<value>%si</value>
			<value>%di</value>
			<!-- <value>%bp</value> -->
			<!-- <value>%sp</value> -->
			<value>%r8w</value>
			<value>%r9w</value>
			<value>%r10w</value>
			<value>%r11w</value>
			<value>%r12w</value>
			<value>%r13w</value>
			<value>%r14w</value>
			<value>%r15w</value>
		</item>

		<item type="constant" name="r32">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
		</item>

		<item type="constant" name="r64">
			<value>%rax</value>
			<value>%rbx</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<!-- <value>%rbp</value> -->
			<!-- <value>%rsp</value> -->
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r13</value>
			<value>%r14</value>
			<value>%r15</value>
		</item>

		<item type="constant" name="m8">
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>
		<item type="constant" name="m16">
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>
		<item type="constant" name="m32">
			<value>m32_init_1(%rip)</value>
			<value>m32_init_2(%rip)</value>
			<value>m32_init_3(%rip)</value>
			<value>m32_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>
		<item type="constant" name="m64">
			<value>m64_init_1(%rip)</value>
			<value>m64_init_2(%rip)</value>
			<value>m64_init_3(%rip)</value>
			<value>m64_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>
		<item type="constant" name="m80">
			<value>m80_init_1(%rip)</value>
			<value>m80_init_2(%rip)</value>
			<value>m80_init_3(%rip)</value>
			<value>m80_init_4(%rip)</value>
			<value>m80int_c1(%rip)</value>
		</item>
		<item type="constant" name="m128">
			<value>m128_init_1(%rip)</value>
			<value>m128_init_2(%rip)</value>
			<value>m128_init_3(%rip)</value>
			<value>m128_init_4(%rip)</value>
			<value>m128fp_c1(%rip)</value>
			<value>m128int_c1(%rip)</value>
		</item>
		<item type="constant" name="m256">
			<value>m256_init_1(%rip)</value>
			<value>m256_init_2(%rip)</value>
			<value>m256_init_3(%rip)</value>
			<value>m256_init_4(%rip)</value>
			<value>m256fp_c1(%rip)</value>
			<value>m256int_c1(%rip)</value>
		</item>


		<item type="constant" name="rm8">
			<value>%al</value>
			<value>%bl</value>
			<value>%cl</value>
			<value>%dl</value>
			<value>%sil</value>
			<value>%dil</value>
			<!-- <value>%bpl</value> -->
			<!-- <value>%spl</value> -->
			<value>%r8b</value>
			<value>%r9b</value>
			<value>%r10b</value>
			<value>%r11b</value>
			<value>%r12b</value>
			<value>%r13b</value>
			<value>%r14b</value>
			<value>%r15b</value>
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>

		<item type="constant" name="rm16">
			<value>%ax</value>
			<value>%bx</value>
			<value>%cx</value>
			<value>%dx</value>
			<value>%si</value>
			<value>%di</value>
			<!-- <value>%bp</value> -->
			<!-- <value>%sp</value> -->
			<value>%r8w</value>
			<value>%r9w</value>
			<value>%r10w</value>
			<value>%r11w</value>
			<value>%r12w</value>
			<value>%r13w</value>
			<value>%r14w</value>
			<value>%r15w</value>
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>

		<item type="constant" name="rm32">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>m32_init_1(%rip)</value>
			<value>m32_init_2(%rip)</value>
			<value>m32_init_3(%rip)</value>
			<value>m32_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>

		<item type="constant" name="rm64">
			<value>%rax</value>
			<value>%rbx</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<!-- <value>%rbp</value> -->
			<!-- <value>%rsp</value> -->
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r13</value>
			<value>%r14</value>
			<value>%r15</value>
			<value>m64_init_1(%rip)</value>
			<value>m64_init_2(%rip)</value>
			<value>m64_init_3(%rip)</value>
			<value>m64_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>

		<item type="constant" name="r32m8">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>
		<item type="constant" name="r32m16">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>
		<item type="constant" name="stx">
			<value>%st(0)</value>
			<value>%st(1)</value>
			<value>%st(2)</value>
			<value>%st(3)</value>
			<value>%st(4)</value>
			<value>%st(5)</value>
			<value>%st(6)</value>
			<value>%st(7)</value>
		</item>
		<item type="constant" name="st0">
			<value>%st(0)</value>
		</item>	
		<item type="constant" name="m16int">
			<value>m16int_init_1(%rip)</value>
			<value>m16int_init_2(%rip)</value>
			<value>m16int_init_3(%rip)</value>
			<value>m16int_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>	
		<item type="constant" name="m32int">
			<value>m32int_init_1(%rip)</value>
			<value>m32int_init_2(%rip)</value>
			<value>m32int_init_3(%rip)</value>
			<value>m32int_init_4(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>	
		<item type="constant" name="m64int">
			<value>m64int_init_1(%rip)</value>
			<value>m64int_init_2(%rip)</value>
			<value>m64int_init_3(%rip)</value>
			<value>m64int_init_4(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>	
		<item type="constant" name="m32fp">
			<value>m32fp_init_1(%rip)</value>
			<value>m32fp_init_2(%rip)</value>
			<value>m32fp_init_3(%rip)</value>
			<value>m32fp_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
		</item>	
		<item type="constant" name="m64fp">
			<value>m64fp_init_1(%rip)</value>
			<value>m64fp_init_2(%rip)</value>
			<value>m64fp_init_3(%rip)</value>
			<value>m64fp_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
		</item>	

		<item type="constant" name="mmx">
			<value>%mm0</value>
			<value>%mm1</value>
			<value>%mm2</value>
			<value>%mm3</value>
			<value>%mm4</value>
			<value>%mm5</value>
			<value>%mm6</value>
			<value>%mm7</value>
		</item>
		<item type="constant" name="mmxm32">
			<value>%mm0</value>
			<value>%mm1</value>
			<value>%mm2</value>
			<value>%mm3</value>
			<value>%mm4</value>
			<value>%mm5</value>
			<value>%mm6</value>
			<value>%mm7</value>
			<value>m32_init_1(%rip)</value>
			<value>m32_init_2(%rip)</value>
			<value>m32_init_3(%rip)</value>
			<value>m32_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>
		<item type="constant" name="mmxm64">
			<value>%mm0</value>
			<value>%mm1</value>
			<value>%mm2</value>
			<value>%mm3</value>
			<value>%mm4</value>
			<value>%mm5</value>
			<value>%mm6</value>
			<value>%mm7</value>
			<value>m64_init_1(%rip)</value>
			<value>m64_init_2(%rip)</value>
			<value>m64_init_3(%rip)</value>
			<value>m64_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>
		<item type="constant" name="mmxm128">
			<value>%mm0</value>
			<value>%mm1</value>
			<value>%mm2</value>
			<value>%mm3</value>
			<value>%mm4</value>
			<value>%mm5</value>
			<value>%mm6</value>
			<value>%mm7</value>
			<value>m128_init_1(%rip)</value>
			<value>m128_init_2(%rip)</value>
			<value>m128_init_3(%rip)</value>
			<value>m128_init_4(%rip)</value>
			<value>m128fp_c1(%rip)</value>
			<value>m128int_c1(%rip)</value>
		</item>			
		<item type="constant" name="xmm">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
		</item>	
		<item type="constant" name="xmmm8">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>
		<item type="constant" name="xmmm16">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>
		<item type="constant" name="xmmm32">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
			<value>m32_init_1(%rip)</value>
			<value>m32_init_2(%rip)</value>
			<value>m32_init_3(%rip)</value>
			<value>m32_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>
		<item type="constant" name="xmmm64">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
			<value>m64_init_1(%rip)</value>
			<value>m64_init_2(%rip)</value>
			<value>m64_init_3(%rip)</value>
			<value>m64_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>
		<item type="constant" name="xmmm128">
			<value>%xmm0</value>
			<value>%xmm1</value>
			<value>%xmm2</value>
			<value>%xmm3</value>
			<value>%xmm4</value>
			<value>%xmm5</value>
			<value>%xmm6</value>
			<value>%xmm7</value>
			<value>%xmm8</value>
			<value>%xmm9</value>
			<value>%xmm10</value>
			<value>%xmm11</value>
			<value>%xmm12</value>
			<value>%xmm13</value>
			<value>%xmm14</value>
			<value>%xmm15</value>
			<value>m128_init_1(%rip)</value>
			<value>m128_init_2(%rip)</value>
			<value>m128_init_3(%rip)</value>
			<value>m128_init_4(%rip)</value>
			<value>m128fp_c1(%rip)</value>
			<value>m128int_c1(%rip)</value>
		</item>

		<item type="constant" name="ymm">
			<value>%ymm0</value>
			<value>%ymm1</value>
			<value>%ymm2</value>
			<value>%ymm3</value>
			<value>%ymm4</value>
			<value>%ymm5</value>
			<value>%ymm6</value>
			<value>%ymm7</value>
			<value>%ymm8</value>
			<value>%ymm9</value>
			<value>%ymm10</value>
			<value>%ymm11</value>
			<value>%ymm12</value>
			<value>%ymm13</value>
			<value>%ymm14</value>
			<value>%ymm15</value>
		</item>	

		<item type="constant" name="ymmm256">
			<value>%ymm0</value>
			<value>%ymm1</value>
			<value>%ymm2</value>
			<value>%ymm3</value>
			<value>%ymm4</value>
			<value>%ymm5</value>
			<value>%ymm6</value>
			<value>%ymm7</value>
			<value>%ymm8</value>
			<value>%ymm9</value>
			<value>%ymm10</value>
			<value>%ymm11</value>
			<value>%ymm12</value>
			<value>%ymm13</value>
			<value>%ymm14</value>
			<value>%ymm15</value>
			<value>m256_init_1(%rip)</value>
			<value>m256_init_2(%rip)</value>
			<value>m256_init_3(%rip)</value>
			<value>m256_init_4(%rip)</value>
			<value>m256fp_c1(%rip)</value>
			<value>m256int_c1</value>
		</item>	
		<item type="constant" name="bnd">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
		</item>	
		<item type="constant" name="bndm8">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>
		<item type="constant" name="bndm16">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>	
		<item type="constant" name="bndm32">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
			<value>m32_init_1(%rip)</value>
			<value>m32_init_2(%rip)</value>
			<value>m32_init_3(%rip)</value>
			<value>m32_init_4(%rip)</value>
			<value>m32fp_c1(%rip)</value>
			<value>m32int_c1(%rip)</value>
		</item>
		<item type="constant" name="bndm64">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
			<value>m64_init_1(%rip)</value>
			<value>m64_init_2(%rip)</value>
			<value>m64_init_3(%rip)</value>
			<value>m64_init_4(%rip)</value>
			<value>m64fp_c1(%rip)</value>
			<value>m64int_c1(%rip)</value>
		</item>
		<item type="constant" name="bndm128">
			<value>%bnd0</value>
			<value>%bnd1</value>
			<value>%bnd2</value>
			<value>%bnd3</value>
			<value>m128_init_1(%rip)</value>
			<value>m128_init_2(%rip)</value>
			<value>m128_init_3(%rip)</value>
			<value>m128_init_4(%rip)</value>
			<value>m128fp_c1(%rip)</value>
			<value>m128int_c1(%rip)</value>
		</item>	
		<item type="constant" name="reg">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>%rax</value>
			<value>%rbx</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<!-- <value>%rbp</value> -->
			<!-- <value>%rsp</value> -->
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r13</value>
			<value>%r14</value>
			<value>%r15</value>
		</item>
		<item type="constant" name="regm8">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>%rax</value>
			<value>%rbx</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<!-- <value>%rbp</value> -->
			<!-- <value>%rsp</value> -->
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r13</value>
			<value>%r14</value>
			<value>%r15</value>
			<value>m8_init_1(%rip)</value>
			<value>m8_init_2(%rip)</value>
			<value>m8_init_3(%rip)</value>
			<value>m8_init_4(%rip)</value>
			<value>m8int_c1(%rip)</value>
		</item>
		<item type="constant" name="regm16">
			<value>%eax</value>
			<value>%ebx</value>
			<value>%ecx</value>
			<value>%edx</value>
			<value>%esi</value>
			<value>%edi</value>
			<!-- <value>%ebp</value> -->
			<!-- <value>%esp</value> -->
			<value>%r8d</value>
			<value>%r9d</value>
			<value>%r10d</value>
			<value>%r11d</value>
			<value>%r12d</value>
			<value>%r13d</value>
			<value>%r14d</value>
			<value>%r15d</value>
			<value>%rax</value>
			<value>%rbx</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<!-- <value>%rbp</value> -->
			<!-- <value>%rsp</value> -->
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r13</value>
			<value>%r14</value>
			<value>%r15</value>
			<value>m16_init_1(%rip)</value>
			<value>m16_init_2(%rip)</value>
			<value>m16_init_3(%rip)</value>
			<value>m16_init_4(%rip)</value>
			<value>m16int_c1(%rip)</value>
		</item>



		<item type="constant" name="base64">

			<!-- (,index,) (base,index,scale) (base) (,index,scale)  -->
			<value>%rsp</value>
			<!--
			<value></value>
			<value>%rax</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rbx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r14</value>
			<value>%r15</value>
			-->
		</item>
		<item type="constant" name="index64">

			<!-- (,index,) (base,index,scale) (base) (,index,scale)  -->
			<value>%rsp</value>
			<!--
			<value></value>
			<value>%rax</value>
			<value>%rcx</value>
			<value>%rdx</value>
			<value>%rbx</value>
			<value>%rsi</value>
			<value>%rdi</value>
			<value>%r8</value>
			<value>%r9</value>
			<value>%r10</value>
			<value>%r11</value>
			<value>%r12</value>
			<value>%r14</value>
			<value>%r15</value>
			-->
		</item>
		<item type="constant" name="scale">

			<value></value>
			<!--
			<value>1</value>
			<value>2</value>
			<value>4</value>
			<value>8</value>
			-->
			</item>
		<item type="constant" name="comma">

			<value></value>
			<!-- 
			<value>,</value>
			-->
		</item>

		<!-- legacy jcc -->>
		<item type="constant" name="legacy_jcc">
			<value>ja</value>
			<value>jae</value>
			<value>jb</value>
			<value>jbe</value>
			<value>jc</value>
			<!--<value>jcxz</value>--> <!-- not support 64 -->
			<!--<value>jecxz</value>--> <!-- not support 64 -->
			<!--<value>jrcxz</value>--> <!-- not support 64 -->
			<value>je</value>
			<value>jg</value>
			<value>jge</value>
			<value>jl</value>
			<value>jle</value>
			<value>jna</value>
			<value>jnae</value>
			<value>jnb</value>
			<value>jnbe</value>
			<value>jnc</value>
			<value>jne</value>
			<value>jng</value>
			<value>jnge</value>
			<value>jnl</value>
			<value>jnle</value>
			<value>jno</value>
			<value>jnp</value>
			<value>jns</value>
			<value>jnz</value>
			<value>jo</value>
			<value>jpe</value>
			<value>jpo</value>
			<value>js</value>
			<value>jz</value>
		</item>

		<!-- legacy two operands -->
			<!-- 8 bit-->
		<item type="constant" name="legacy_r8_r8">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>cmp</value>
			<value>cmpxchg</value>
			<value>mov</value>
			<value>or</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xadd</value>
			<value>xchg</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m8_r8">
			<value>adcb</value>
			<value>addb</value>
			<value>andb</value>
			<value>cmpb</value>
			<value>cmpxchgb</value>
			<value>movb</value>
			<value>orb</value>
			<value>sbbb</value>
			<value>subb</value>
			<value>testb</value>
			<value>xaddb</value>
			<value>xchgb</value>
			<value>xorb</value>
		</item>
		<item type="constant" name="legacy_r8_m8">
			<value>adcb</value>
			<value>addb</value>
			<value>andb</value>
			<value>cmpb</value>
			<value>movb</value>
			<value>orb</value>
			<value>sbbb</value>
			<value>subb</value>
			<value>xchgb</value>
			<value>xorb</value>
		</item>
		<item type="constant" name="legacy_r8_imm8">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>cmp</value>
			<value>mov</value>
			<value>or</value>
			<value>rcl</value>
			<value>rol</value>
			<value>rcr</value>
			<value>ror</value>
			<value>sal</value>
			<value>sar</value>
			<value>shl</value>
			<value>shr</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m8_imm8">
			<value>adcb</value>
			<value>addb</value>
			<value>andb</value>
			<value>cmpb</value>
			<value>movb</value>
			<value>orb</value>
			<value>rclb</value>
			<value>rolb</value>
			<value>rcrb</value>
			<value>rorb</value>
			<value>salb</value>
			<value>sarb</value>
			<value>shlb</value>
			<value>shrb</value>
			<value>sbbb</value>
			<value>subb</value>
			<value>testb</value>
			<value>xorb</value>
		</item>
		<item type="constant" name="legacy_m8_m8">
			<value>cmps</value>
			<value>movs</value>
		</item>


			<!-- 16 bit-->
		<item type="constant" name="legacy_r16_r16">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>bsf</value>
			<value>bsr</value>
			<value>bt</value>
			<value>btc</value>
			<value>btr</value>
			<value>bts</value>
			<value>cmova</value>
			<value>cmovae</value>
			<value>cmovb</value>
			<value>cmovbe</value>
			<value>cmovc</value>
			<value>cmove</value>
			<value>cmovg</value>
			<value>cmovge</value>
			<value>cmovl</value>
			<value>cmovle</value>
			<value>cmovna</value>
			<value>cmovnae</value>
			<value>cmovnb</value>
			<value>cmovnbe</value>
			<value>cmovnc</value>
			<value>cmovne</value>
			<value>cmovng</value>
			<value>cmovnge</value>
			<value>cmovnl</value>
			<value>cmovnle</value>
			<value>cmovno</value>
			<value>cmovnp</value>
			<value>cmovns</value>
			<value>cmovnz</value>
			<value>cmovo</value>
			<value>cmovp</value>
			<value>cmovpe</value>
			<value>cmovpo</value>
			<value>cmovs</value>
			<value>cmovz</value>
			<value>cmp</value>
			<value>cmpxchg</value>
			<value>imul</value>
			<value>mov</value>
			<value>or</value>
			<value>popcnt</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xadd</value>
			<value>xchg</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m16_r16">
			<value>adcw</value>
			<value>addw</value>
			<value>andw</value>
			<!-- <value>btw</value> -->
			<!-- <value>btcw</value> -->
			<!-- <value>btrw</value> -->
			<!-- <value>btsw</value> -->
			<value>cmpw</value>
			<value>cmpxchgw</value>
			<value>movw</value>
			<value>orw</value>
			<value>sbbw</value>
			<value>subw</value>
			<value>testw</value>
			<value>xaddw</value>
			<value>xchgw</value>
			<value>xorw</value>
		</item>
		<item type="constant" name="legacy_r16_m16">
			<value>adcw</value>
			<value>addw</value>
			<value>andw</value>
			<value>bsfw</value>
			<value>bsrw</value>
			<value>cmovaw</value>
			<value>cmovaew</value>
			<value>cmovbw</value>
			<value>cmovbew</value>
			<value>cmovcw</value>
			<value>cmovew</value>
			<value>cmovgw</value>
			<value>cmovgew</value>
			<value>cmovlw</value>
			<value>cmovlew</value>
			<value>cmovnaw</value>
			<value>cmovnaew</value>
			<value>cmovnbw</value>
			<value>cmovnbew</value>
			<value>cmovncw</value>
			<value>cmovnew</value>
			<value>cmovngw</value>
			<value>cmovngew</value>
			<value>cmovnlw</value>
			<value>cmovnlew</value>
			<value>cmovnow</value>
			<value>cmovnpw</value>
			<value>cmovnsw</value>
			<value>cmovnzw</value>
			<value>cmovow</value>
			<value>cmovpw</value>
			<value>cmovpew</value>
			<value>cmovpow</value>
			<value>cmovsw</value>
			<value>cmovzw</value>
			<value>cmpw</value>
			<value>imulw</value>
			<value>movw</value>
			<value>orw</value>
			<value>popcntw</value>
			<value>sbbw</value>
			<value>subw</value>
			<value>xchgw</value>
			<value>xorw</value>
		</item>
		<item type="constant" name="legacy_r16_imm8">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>bt</value>
			<value>btc</value>
			<value>btr</value>
			<value>bts</value>
			<value>cmp</value>
			<value>or</value>
			<value>rcl</value>
			<value>rol</value>
			<value>rcr</value>
			<value>ror</value>
			<value>sal</value>
			<value>sar</value>
			<value>shl</value>
			<value>shr</value>
			<value>sub</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m16_imm8">
			<value>adcw</value>
			<value>addw</value>
			<value>andw</value>
			<value>btw</value>
			<value>btcw</value>
			<value>btrw</value>
			<value>btsw</value>
			<value>cmpw</value>
			<value>orw</value>
			<value>rclw</value>
			<value>rolw</value>
			<value>rcrw</value>
			<value>rorw</value>
			<value>salw</value>
			<value>sarw</value>
			<value>shlw</value>
			<value>shrw</value>
			<value>subw</value>
			<value>xorw</value>
		</item>
		<item type="constant" name="legacy_r16_imm16">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>cmp</value>
			<value>mov</value>
			<value>or</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m16_imm16">
			<value>adcw</value>
			<value>addw</value>
			<value>andw</value>
			<value>cmpw</value>
			<value>movw</value>
			<value>orw</value>
			<value>sbbw</value>
			<value>subw</value>
			<value>testw</value>
			<value>xorw</value>
		</item>
		<item type="constant" name="legacy_m16_m16">
			<value>cmps</value>
			<value>movs</value>
		</item>

			<!-- 32 bit-->
		<item type="constant" name="legacy_r32_r32">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
			<value>bsf</value>
			<value>bsr</value>
			<value>bt</value>
			<value>btc</value>
			<value>btr</value>
			<value>bts</value>
			<value>cmova</value>
			<value>cmovae</value>
			<value>cmovb</value>
			<value>cmovbe</value>
			<value>cmovc</value>
			<value>cmove</value>
			<value>cmovg</value>
			<value>cmovge</value>
			<value>cmovl</value>
			<value>cmovle</value>
			<value>cmovna</value>
			<value>cmovnae</value>
			<value>cmovnb</value>
			<value>cmovnbe</value>
			<value>cmovnc</value>
			<value>cmovne</value>
			<value>cmovng</value>
			<value>cmovnge</value>
			<value>cmovnl</value>
			<value>cmovnle</value>
			<value>cmovno</value>
			<value>cmovnp</value>
			<value>cmovns</value>
			<value>cmovnz</value>
			<value>cmovo</value>
			<value>cmovp</value>
			<value>cmovpe</value>
			<value>cmovpo</value>
			<value>cmovs</value>
			<value>cmovz</value>
			<value>cmp</value>
			<value>cmpxchg</value>
			<value>crc32</value>
			<value>imul</value>
			<value>mov</value>
			<value>or</value>
			<value>popcnt</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xadd</value>
			<value>xchg</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m32_r32">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
			<!-- <value>btl</value> -->
			<!-- <value>btcl</value> -->
			<!-- <value>btrl</value> -->
			<!-- <value>btsl</value> -->
			<value>cmpxchgl</value>
			<value>movl</value>
			<value>movntil</value>
			<value>orl</value>
			<value>sbbl</value>
			<value>subl</value>
			<value>testl</value>
			<value>xaddl</value>
			<value>xchgl</value>
			<value>xorl</value>
		</item>
		<item type="constant" name="legacy_r32_m32">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
			<value>bsfl</value>
			<value>bsrl</value>	
			<value>cmoval</value>
			<value>cmovael</value>
			<value>cmovbl</value>
			<value>cmovbel</value>
			<value>cmovcl</value>
			<value>cmovel</value>
			<value>cmovgl</value>
			<value>cmovgel</value>
			<value>cmovll</value>
			<value>cmovlel</value>
			<value>cmovnal</value>
			<value>cmovnael</value>
			<value>cmovnbl</value>
			<value>cmovnbel</value>
			<value>cmovncl</value>
			<value>cmovnel</value>
			<value>cmovngl</value>
			<value>cmovngel</value>
			<value>cmovnll</value>
			<value>cmovnlel</value>
			<value>cmovnol</value>
			<value>cmovnpl</value>
			<value>cmovnsl</value>
			<value>cmovnzl</value>
			<value>cmovol</value>
			<value>cmovpl</value>
			<value>cmovpel</value>
			<value>cmovpol</value>
			<value>cmovsl</value>
			<value>cmovzl</value>
			<value>cmpl</value>	
			<value>crc32l</value>
			<value>imull</value>
			<value>movl</value>
			<value>orl</value>
			<value>popcntl</value>
			<value>sbbl</value>
			<value>subl</value>
			<value>xchgl</value>
			<value>xorl</value>
		</item>
		<item type="constant" name="legacy_r32_imm8">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>bt</value>
			<value>btc</value>
			<value>btr</value>
			<value>bts</value>
			<value>cmp</value>
			<value>or</value>
			<value>rcl</value>
			<value>rol</value>
			<value>rcr</value>
			<value>ror</value>
			<value>sal</value>
			<value>sar</value>
			<value>shl</value>
			<value>shr</value>
			<value>sub</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m32_imm8">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
			<value>btl</value>
			<value>btcl</value>
			<value>btrl</value>
			<value>btsl</value>
			<value>cmpl</value>
			<value>orl</value>
			<value>rcll</value>
			<value>roll</value>
			<value>rcrl</value>
			<value>rorl</value>
			<value>sall</value>
			<value>sarl</value>
			<value>shll</value>
			<value>shrl</value>
			<value>subl</value>
			<value>xorl</value>
		</item>
		<item type="constant" name="legacy_r32_imm16">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
		</item>
		<item type="constant" name="legacy_m32_imm16">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
		</item>
		<item type="constant" name="legacy_r32_imm32">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>cmp</value>
			<value>mov</value>
			<value>or</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m32_imm32">
			<value>adcl</value>
			<value>addl</value>
			<value>andl</value>
			<value>cmpl</value>
			<value>movl</value>
			<value>orl</value>
			<value>sbbl</value>
			<value>subl</value>
			<value>testl</value>
			<value>xorl</value>
		</item>
		<item type="constant" name="legacy_m32_m32">
			<value>cmps</value>
			<value>movs</value>
		</item>
		<item type="constant" name="legacy_r32_m8">
			<value>crc32b</value>
		</item>
		<item type="constant" name="legacy_r32_r8">
			<value>crc32</value>
		</item>
		<item type="constant" name="legacy_r32_m16">
			<value>crc32l</value>
		</item>
		<item type="constant" name="legacy_r32_r16">
			<value>crc32</value>
		</item>


			<!-- 64 bit-->
		<item type="constant" name="legacy_r64_r64">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>bsf</value>
			<value>bsr</value>	
			<value>bt</value>
			<value>btc</value>
			<value>btr</value> 
			<value>bts</value>
			<value>cmova</value>
			<value>cmovae</value>
			<value>cmovb</value>
			<value>cmovbe</value>
			<value>cmovc</value>
			<value>cmove</value>
			<value>cmovg</value>
			<value>cmovge</value>
			<value>cmovl</value>
			<value>cmovle</value>
			<value>cmovna</value>
			<value>cmovnae</value>
			<value>cmovnb</value>
			<value>cmovnbe</value>
			<value>cmovnc</value>
			<value>cmovne</value>
			<value>cmovng</value>
			<value>cmovnge</value>
			<value>cmovnl</value>
			<value>cmovnle</value>
			<value>cmovno</value>
			<value>cmovnp</value>
			<value>cmovns</value>
			<value>cmovnz</value>
			<value>cmovo</value>
			<value>cmovp</value>
			<value>cmovpe</value>
			<value>cmovpo</value>
			<value>cmovs</value>
			<value>cmovz</value>
			<value>cmp</value>
			<value>cmpxchg</value>
			<value>crc32</value>
			<value>imul</value>	
			<value>mov</value>
			<value>or</value>	
			<value>popcnt</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xadd</value>
			<value>xchg</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m64_r64">
			<value>adcq</value>
			<value>addq</value>
			<value>andq</value>
			<!-- <value>btq</value> -->
			<!-- <value>btcq</value> -->
			<!-- <value>btrq</value> -->
			<!-- <value>btsq</value> -->
			<value>cmpq</value>
			<value>cmpxchgq</value>
			<value>movq</value>
			<value>movnti</value>
			<value>orq</value>
			<value>sbbq</value>
			<value>subq</value>
			<value>testq</value>
			<value>xaddq</value>
			<value>xchgq</value>
			<value>xorq</value>
		</item>
		<item type="constant" name="legacy_r64_m64">
			<value>adcq</value>
			<value>addq</value>
			<value>andq</value>
			<value>bsfq</value>
			<value>bsrq</value>
			<value>cmovaq</value>
			<value>cmovaeq</value>
			<value>cmovbq</value>
			<value>cmovbeq</value>
			<value>cmovcq</value>
			<value>cmoveq</value>
			<value>cmovgq</value>
			<value>cmovgeq</value>
			<value>cmovlq</value>
			<value>cmovleq</value>
			<value>cmovnaq</value>
			<value>cmovnaeq</value>
			<value>cmovnbq</value>
			<value>cmovnbeq</value>
			<value>cmovncq</value>
			<value>cmovneq</value>
			<value>cmovngq</value>
			<value>cmovngeq</value>
			<value>cmovnlq</value>
			<value>cmovnleq</value>
			<value>cmovnoq</value>
			<value>cmovnpq</value>
			<value>cmovnsq</value>
			<value>cmovnzq</value>
			<value>cmovoq</value>
			<value>cmovpq</value>
			<value>cmovpeq</value>
			<value>cmovpoq</value>
			<value>cmovsq</value>
			<value>cmovzq</value>
			<value>cmpq</value>	
			<value>crc32q</value>
			<value>imulq</value>
			<value>movq</value>
			<value>orq</value>
			<value>popcntq</value>
			<value>sbbq</value>
			<value>subq</value>
			<value>xchgq</value>
			<value>xorq</value>
		</item>
		<item type="constant" name="legacy_r64_imm8">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>bt</value>
			<value>btc</value>
			<value>btr</value>
			<value>bts</value>
			<value>cmp</value>
			<value>or</value>
			<value>rcl</value>
			<value>rol</value>
			<value>rcr</value>
			<value>ror</value>
			<value>sal</value>
			<value>sar</value>
			<value>shl</value>
			<value>shr</value>
			<value>sub</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m64_imm8">
			<value>adcq</value>
			<value>addq</value>
			<value>andq</value>
			<value>btq</value>
			<value>btcq</value>
			<value>btrq</value>
			<value>btsq</value>
			<value>cmpq</value>
			<value>orq</value>
			<value>rclq</value>
			<value>rolq</value>
			<value>rcrq</value>
			<value>rorq</value>
			<value>salq</value>
			<value>sarq</value>
			<value>shlq</value>
			<value>shrq</value>	
			<value>subq</value>
			<value>xorq</value>
		</item>
		<item type="constant" name="legacy_r64_imm16">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
		</item>
		<item type="constant" name="legacy_m64_imm16">
			<value>adcq</value>
			<value>addq</value>
			<value>andq</value>
		</item>
		<item type="constant" name="legacy_r64_imm32">
			<value>adc</value>
			<value>add</value>
			<value>and</value>
			<value>cmp</value>
			<value>mov</value>
			<value>or</value>
			<value>sbb</value>
			<value>sub</value>
			<value>test</value>
			<value>xor</value>
		</item>
		<item type="constant" name="legacy_m64_imm32">
			<value>adcq</value>
			<value>addq</value>
			<value>andq</value>
			<value>cmpq</value>
			<value>movq</value>
			<value>orq</value>
			<value>sbbq</value>
			<value>subq</value>
			<value>testq</value>
			<value>xorq</value>
		</item>
		<item type="constant" name="legacy_r64_imm64">
			<value>mov</value>
		</item>		
		<item type="constant" name="legacy_m64_m64">
			<value>cmps</value>
			<value>maskmovq</value>
			<value>movs</value>
		</item>
		<item type="constant" name="legacy_r64_m8">
			<value>crc32b</value>
		</item>
		<item type="constant" name="legacy_r64_r8">
			<value>crc32</value>
		</item>

		<!-- legacy one operand -->
		<item type="constant" name="legacy_r8">
			<value>dec</value>
			<!--<value>div</value>-->
			<!--<value>idiv</value>-->
			<value>imul</value>
			<value>inc</value>
			<value>mul</value>
			<value>neg</value>
			<value>not</value>
			<value>seta</value>
			<value>setae</value>
			<value>setb</value>
			<value>setbe</value>
			<value>setc</value>
			<value>sete</value>
			<value>setg</value>
			<value>setge</value>
			<value>setl</value>
			<value>setle</value>
			<value>setna</value>
			<value>setnae</value>
			<value>setnb</value>
			<value>setnbe</value>
			<value>setnc</value>
			<value>setne</value>
			<value>setng</value>
			<value>setnge</value>
			<value>setnl</value>
			<value>setnle</value>
			<value>setno</value>
			<value>setnp</value>
			<value>setns</value>
			<value>setnz</value>
			<value>seto</value>
			<value>setp</value>
			<value>setpe</value>
			<value>setpo</value>
			<value>sets</value>
			<value>setz</value>
		</item>
		<item type="constant" name="legacy_r16">
			<value>dec</value>
			<!--<value>div</value>-->
			<!--<value>idiv</value>-->
			<value>imul</value>
			<value>inc</value>
			<value>mul</value>
			<value>neg</value>
			<value>not</value>
		</item>			
		<item type="constant" name="legacy_r32">
			<value>bswap</value>
			<value>dec</value>
			<!--<value>div</value>-->
			<!--<value>idiv</value>-->
			<value>imul</value>
			<value>inc</value>
			<value>mul</value>
			<value>neg</value>
			<value>not</value>
		</item>
		<item type="constant" name="legacy_r64">
			<value>bswap</value>
			<value>dec</value>
			<!--<value>div</value>-->
			<!--<value>idiv</value>-->
			<value>imul</value>
			<value>inc</value>
			<value>mul</value>
			<value>neg</value>
			<value>not</value>
		</item>
		<item type="constant" name="legacy_m8">
			<value>clflush</value>
			<!-- <value>clflushopt</value> -->
			<value>decb</value>
			<!--<value>divb</value>-->
			<!--<value>idivb</value>-->
			<value>imulb</value>
			<value>incb</value>
			<value>mulb</value>
			<value>negb</value>
			<value>notb</value>
			<value>setab</value>
			<value>setaeb</value>
			<value>setbb</value>
			<value>setbeb</value>
			<value>setcb</value>
			<value>seteb</value>
			<value>setgb</value>
			<value>setgeb</value>
			<value>setlb</value>
			<value>setleb</value>
			<value>setnab</value>
			<value>setnaeb</value>
			<value>setnbb</value>
			<value>setnbeb</value>
			<value>setncb</value>
			<value>setneb</value>
			<value>setngb</value>
			<value>setngeb</value>
			<value>setnlb</value>
			<value>setnleb</value>
			<value>setnob</value>
			<value>setnpb</value>
			<value>setnsb</value>
			<value>setnzb</value>
			<value>setob</value>
			<value>setpb</value>
			<value>setpeb</value>
			<value>setpob</value>
			<value>setsb</value>
			<value>setzb</value>
		</item>
		<item type="constant" name="legacy_m16">
			<value>decw</value>
			<!--<value>divw</value>-->
			<!--<value>idivw</value>-->
			<value>imulw</value>
			<value>incw</value>
			<value>mulw</value>
			<value>negw</value>
			<value>notw</value>
		</item>
		<item type="constant" name="legacy_m32">
			<value>decl</value>
			<!--<value>divl</value>-->
			<!--<value>idivl</value>-->
			<value>imull</value>
			<value>incl</value>
			<value>mull</value>
			<value>negl</value>
			<value>notl</value>
		</item>		
		<item type="constant" name="legacy_m64">
			<value>cmpxchg8b</value>
			<value>decq</value>
			<!--<value>divq</value>-->
			<!--<value>idivq</value>-->
			<value>imulq</value>
			<value>incq</value>
			<value>mulq</value>
			<value>negq</value>
			<value>notq</value>
		</item>
	
		<item type="constant" name="legacy_m128">
			<value>cmpxchg16b</value>
		</item>


		<!-- legacy no operand -->
		<item type="constant" name="legacy_">
			<value>cbw</value>
			<value>cwde</value>
			<value>cdqe</value>
			<value>clc</value>
			<value>cld</value>
			<!--
			<value>cmpsb</value>
			<value>cmpsw</value>
			<value>cmpsd</value>
			<value>cmpsq</value>
			<value>movsb</value>
			<value>movsw</value>
			<value>movsd</value>
			<value>movsq</value>
			-->
			<value>cpuid</value>
			<value>cwd</value>
			<value>cdq</value>
			<value>cqo</value>
			<!--<value>daa</value>-->
			<value>emms</value>
			<value>lfence</value>
			<value>mfence</value>
			<value>sfence</value>
			<value>nop</value>
		</item>


		<!-- legacy three operands -->
		<item type="constant" name="legacy_r16_r16_imm8">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_rm16_r16_imm8">
			<value>shld</value>
			<value>shrd</value>
		</item>
		<item type="constant" name="legacy_r16_m16_imm8">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_r32_r32_imm8">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_rm32_r32_imm8">
			<value>shld</value>
			<value>shrd</value>
		</item>
		<item type="constant" name="legacy_r32_m32_imm8">
			<value>imul</value>
		</item>		
		<item type="constant" name="legacy_r64_r64_imm8">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_rm64_r64_imm8">
			<value>shld</value>
			<value>shrd</value>
		</item>
		<item type="constant" name="legacy_r64_m64_imm8">
			<value>imul</value>
		</item>	
		<item type="constant" name="legacy_r16_r16_imm16">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_r16_m16_imm16">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_r32_r32_imm32">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_r32_m32_imm32">
			<value>imul</value>
		</item>		
		<item type="constant" name="legacy_r64_r64_imm32">
			<value>imul</value>
		</item>
		<item type="constant" name="legacy_r64_m64_imm32">
			<value>imul</value>
		</item>	

		<!-- fpu -->
		<item type="constant" name="fpu_">
			<value>f2xm1</value>
			<value>fabs</value>
			<value>faddp</value>
			<value>fchs</value>
			<value>fclex</value>
			<value>fnclex</value>
			<value>fcom</value>
			<value>fcomp</value>
			<value>fcompp</value>
			<value>fcos</value>
			<value>fdecstp</value>
			<!--<value>fdivp</value>-->
			<!--<value>fdivrp</value>-->
			<value>fincstp</value>
			<value>finit</value>
			<value>fninit</value>
			<value>fld1</value>
			<value>fldl2t</value>
			<value>fldl2e</value>
			<value>fldpi</value>
			<value>fldlg2</value>
			<value>fldln2</value>
			<value>fldz</value>
			<value>fmulp</value>
			<value>fnop</value>
			<value>fpatan</value>
			<value>fprem</value>
			<value>fprem1</value>
			<value>fptan</value>
			<value>frndint</value>
			<value>fscale</value>
			<value>fsin</value>
			<value>fsincos</value>
			<value>fsqrt</value>
			<value>fsubp</value>
			<value>fsubr</value>
			<value>ftst</value>
			<value>fucom</value>
			<value>fucomp</value>
			<value>fucompp</value>
			<value>fxam</value>
			<value>fxch</value>
			<value>fxtract</value>
			<value>fyl2x</value>
			<value>fyl2xp1</value>
		</item>	
		<item type="constant" name="fpu_stx">
			<value>fcom</value>
			<value>fcomp</value>
			<value>fcomi</value>
			<value>fcomip</value>
			<value>fucomi</value>
			<value>fucomip</value>
			<value>ffree</value>
			<value>fld</value>
			<value>fst</value>
			<value>fstp</value>
			<value>fucom</value>
			<value>fucomp</value>
			<value>fxch</value>
		</item>
		<item type="constant" name="fpu_m16int">
			<value>fiadd</value>
			<value>ficom</value>
			<value>ficomp</value>
			<value>fild</value>
			<value>fist</value>
			<value>fistp</value>
			<value>fisttp</value>
			<value>fisub</value>
			<value>fisubr</value>
			<value>fimul</value>
			<!--<value>fidiv</value>-->
			<!--<value>fidivr</value>-->
		</item>
		<item type="constant" name="fpu_m32fp">
			<value>fadd</value>
			<value>fcom</value>
			<value>fcomp</value>
			<value>fcom</value>
			<value>fcomp</value>
			<!--<value>fdiv</value>-->
			<!--<value>fdivr</value>-->
			<value>fld</value>
			<value>fmul</value>
			<value>fst</value>
			<value>fstp</value>
			<value>fsub</value>
			<value>fsubr</value>
		</item>
		<item type="constant" name="fpu_m32int">
			<value>fiadd</value>
			<value>ficom</value>
			<value>ficomp</value>
			<value>fild</value>
			<value>fist</value>
			<value>fistp</value>
			<value>fisttp</value>
			<value>fisub</value>
			<value>fisubr</value>
			<value>fimul</value>
			<!--<value>fidiv</value>-->
			<!--<value>fidivr</value>-->
		</item>
		<item type="constant" name="fpu_m64int">
			<value>fild</value>
			<value>fistp</value>
			<value>fisttp</value>
		</item>
		<item type="constant" name="fpu_m64fp">
			<value>fadd</value>
			<value>fcom</value>
			<value>fcomp</value>
			<!--<value>fdiv</value>-->
			<!--<value>fdivr</value>-->
			<value>fld</value>
			<value>fmul</value>
			<value>fst</value>
			<value>fstp</value>
			<value>fsub</value>
			<value>fsubr</value>
		</item>
		<item type="constant" name="fpu_m80">
			<value>fbld</value>
			<value>fbstp</value>
			<value>fld</value>
			<value>fstp</value>
		</item>

		<item type="constant" name="fpu_stx_st0">
			<value>fadd</value>
			<value>faddp</value>
			<!--<value>fdivp</value>-->
			<!--<value>fdivr</value>-->
			<!--<value>fdivrp</value>-->
			<value>fmul</value>
			<value>fmulp</value>
			<value>fsub</value>
			<value>fsubp</value>
			<value>fsubr</value>
			<value>fsubrp</value>

		</item>
		<item type="constant" name="fpu_st0_stx">
			<value>fadd</value>
			<value>fcmovb</value>
			<!--<value>fcmove</value>-->
			<value>fcmovbe</value>
			<value>fcmovu</value>
			<value>fcmovnb</value>
			<value>fcmovne</value>
			<value>fcmovnbe</value>
			<value>fcmovnu</value>
			<!--<value>fdiv</value>-->
			<!--<value>fdivr</value>-->
			<value>fmul</value>
			<value>fsub</value>
			<value>fsubr</value>
		</item>


		<!-- adx -->
		<item type="constant" name="adx_r32_rm32">
			<value>adcxl</value>
			<value>adoxl</value>
		</item>
		<item type="constant" name="adx_r64_rm64">
			<value>adcxq</value>
			<value>adoxq</value>
		</item>

		<!-- bmi1 -->
		<item type="constant" name="bmi1_r16_rm16">
			<value>tzcnt</value>
		</item>
		<item type="constant" name="bmi1_r32_rm32">
			<value>blsi</value>
			<value>blsmsk</value>
			<value>blsr</value>
			<value>tzcnt</value>
		</item>
		<item type="constant" name="bmi1_r64_rm64">
			<value>blsi</value>
			<value>blsmsk</value>
			<value>blsr</value>
			<value>tzcnt</value>
		</item>
		<item type="constant" name="bmi1_r32_r32_rm32">
			<value>andn</value>
		</item>
		<item type="constant" name="bmi1_r64_r64_rm64">
			<value>andn</value>
		</item>
		<item type="constant" name="bmi1_r32_rm32_r32">
			<value>bextr</value>
		</item>
		<item type="constant" name="bmi1_r64_rm64_r64">
			<value>bextr</value>
		</item>


		<!-- bmi2 -->
		<item type="constant" name="bmi2_r32_rm32_imm8">
			<value>rorx</value>
		</item>
		<item type="constant" name="bmi2_r64_rm64_imm8">
			<value>rorx</value>
		</item>
		<item type="constant" name="bmi2_r32_rm32_r32">
			<value>bzhi</value>
			<value>sarx</value>
			<value>shlx</value>
			<value>shrx</value>
		</item>
		<item type="constant" name="bmi2_r64_rm64_r64">
			<value>bzhi</value>
			<value>sarx</value>
			<value>shlx</value>
			<value>shrx</value>
		</item>
		<item type="constant" name="bmi2_r32_r32_rm32">
			<value>pdep</value>
			<value>pext</value>
		</item>
		<item type="constant" name="bmi2_r64_r64_rm64">
			<value>pdep</value>
			<value>pext</value>
		</item>

		<!-- mpx -->
		<item type="constant" name="mpx_bnd_r32">
			<value>bndcl</value>
			<value>bndcu</value>
			<value>bndcn</value>
		</item>
		<item type="constant" name="mpx_bnd_m32">
			<value>bndcl</value>
			<value>bndcu</value>
			<value>bndcn</value>
			<value>bndmk</value>
		</item>
		<item type="constant" name="mpx_bnd_r64">
			<value>bndcl</value>
			<value>bndcu</value>
			<value>bndcn</value>
			<!-- bndldx-->
			<!-- bndsdx-->
		</item>
		<item type="constant" name="mpx_bnd_m64">
			<value>bndcl</value>
			<value>bndcu</value>
			<value>bndcn</value>
			<value>bndmk</value>
		</item>
		<item type="constant" name="mpx_m64_bnd">
			<value>bndmov</value>
		</item>
		<item type="constant" name="mpx_bnd_bnd">
			<value>bndmov</value>
		</item>
		<item type="constant" name="mpx_bnd_m128">
			<value>bndmov</value>
		</item>
		<item type="constant" name="mpx_m128_bnd">
			<value>bndmov</value>
		</item>

		<!-- cldemote -->
		<item type="constant" name="cldemote_m8">
			<value>cldemote</value>
		</item>

		<!-- clwb -->
		<item type="constant" name="clwb_m8">
			<value>clwb</value>
		</item>


		<!-- aes -->
		<item type="constant" name="aes_xmm_xmmm128">
			<value>aesdec</value>
			<value>aesdeclast</value>
			<value>aesenc</value>
			<value>aesenclast</value>
			<value>aesimc</value>
		</item>
		<item type="constant" name="aes_xmm_xmmm128_imm8">
			<value>aeskeygenassist</value>
		</item>

		<!-- aesavx -->
		<item type="constant" name="aesavx_xmm_xmm_xmmm128">
			<value>vaesdec</value>
			<value>vaesdeclast</value>
			<value>vaesenc</value>
			<value>vaesenclast</value>
		</item>
		<item type="constant" name="aesavx_xmm_xmmm128">
			<value>vaesimc</value>
		</item>
		<item type="constant" name="aesavx_xmm_xmmm128_imm8">
			<value>vaeskeygenassist</value>
		</item>

		<!-- vaes -->
		<item type="constant" name="vaes_ymm_ymm_ymmm256">
			<value>vaesdec</value>
			<value>vaesdeclast</value>
			<value>vaesenc</value>
			<value>vaesenclast</value>
		</item>


		<!-- sha -->
		<item type="constant" name="sha_xmm_xmmm128">
			<value>sha1nexte</value>
			<value>sha1msg1</value>
			<value>sha1msg2</value>
			<value>sha256msg1</value>
			<value>sha256msg2</value>
		</item>
		<item type="constant" name="sha_xmm_xmmm128_imm8">
			<value>sha1rnds4</value>
		</item>



		<!-- simd -->
		<item type="constant" name="simd_mmx_imm8">
			<value>psllw</value>
			<value>pslld</value>
			<value>psllq</value>
			<value>psraw</value>
			<value>psrad</value>
			<value>psrlw</value>
			<value>psrld</value>
			<value>psrlq</value>
		</item>
		<item type="constant" name="simd_mmx_rm32">
			<value>movd</value>
		</item>
		<item type="constant" name="simd_mmx_rm64">
			<value>movq</value>
		</item>
		<item type="constant" name="simd_rm32_mmx">
			<value>movd</value>
		</item>
		<item type="constant" name="simd_rm64_mmx">
			<value>movq</value>
		</item>	
		<item type="constant" name="simd_m64_mmx">
			<value>movntq</value>
		</item>
		<item type="constant" name="simd_mmx_mmxm64">
			<value>movq</value>
			<value>packsswb</value>
			<value>packssdw</value>
			<value>packuswb</value>
			<value>paddb</value>
			<value>paddw</value>
			<value>paddd</value>
			<value>paddq</value>
			<value>paddsb</value>
			<value>paddsw</value>
			<value>paddusb</value>
			<value>paddusw</value>
			<value>pand</value>
			<value>pandn</value>
			<value>pcmpeqb</value>
			<value>pcmpeqw</value>
			<value>pcmpeqd</value>
			<value>pcmpgtb</value>
			<value>pcmpgtw</value>
			<value>pcmpgtd</value>
			<value>pmaddwd</value>
			<value>pmulhw</value>
			<value>pmullw</value>
			<value>por</value>
			<value>psllw</value>
			<value>pslld</value>
			<value>psllq</value>
			<value>psraw</value>
			<value>psrad</value>
			<value>psrlw</value>
			<value>psrld</value>
			<value>psrlq</value>
			<value>psubb</value>
			<value>psubw</value>
			<value>psubd</value>
			<value>psubsb</value>
			<value>psubsw</value>
			<value>psubusb</value>
			<value>psubusw</value>
			<value>punpckhbw</value>
			<value>punpckhwd</value>
			<value>punpckhdq</value>
			<value>punpcklbw</value>
			<value>punpcklwd</value>
			<value>punpckldq</value>
			<value>pxor</value>
		</item>	
		<item type="constant" name="simd_mmxm64_mmx">
			<value>movq</value>
		</item>						
		<item type="constant" name="simd_mmx_xmmm128">
			<value>cvtpd2pi</value>
			<value>cvttpd2pi</value>
		</item>
		<item type="constant" name="simd_mmx_xmmm64">
			<value>cvtps2pi</value>
			<value>cvttps2pi</value>
		</item>	
		<item type="constant" name="simd_mmx_xmm">
			<value>movdq2q</value>
		</item>	
		<item type="constant" name="simd_xmm_mmx">
			<value>movq2dq</value>
		</item>		
		<item type="constant" name="simd_xmm_mmxm64">
			<value>cvtpi2pd</value>
			<value>cvtpi2ps</value>
		</item>
		
		<item type="constant" name="simd_mmx_mmxm64_imm8">
			<value>pshufw</value>
		</item>
		-

		<!-- sse -->

		<item type="constant" name="sse_mmx_mmxm64">
			<value>pavgb</value>
			<value>pavgw</value>
			<value>pmaxsw</value>
			<value>pmaxub</value>
			<value>pminsw</value>
			<value>pminub</value>
			<value>pmulhuw</value>
			<value>psadbw</value>
		</item>	
		<item type="constant" name="sse_reg_mmx">
			<value>pmovmskb</value>
		</item>	
		<item type="constant" name="sse_reg_xmm">
			<value>movmskps</value>
		</item>
		<item type="constant" name="sse_r32_xmmm32">
			<value>cvtss2si</value>
			<value>cvttss2si</value>
		</item>
		<item type="constant" name="sse_r64_xmmm32">
			<value>cvtss2si</value>
			<value>cvttss2si</value>
		</item>	
		<item type="constant" name="sse_xmm_m32">
			<value>movss</value>
		</item>	
		<item type="constant" name="sse_xmm_rm32">
			<value>cvtsi2ss</value>
		</item>
		<item type="constant" name="sse_xmm_m64">
			<value>movhps</value>
			<value>movlps</value>
		</item>
		<item type="constant" name="sse_m64_xmm">
			<value>movhps</value>
			<value>movlps</value>
		</item>
		<item type="constant" name="sse_xmm_rm64">
			<value>cvtsi2ss</value>
		</item>
		<item type="constant" name="sse_xmm_xmm">
			<value>movhlps</value>
			<value>movlhps</value>
			<value>movss</value>
		</item>
		<item type="constant" name="sse_xmm_xmmm32">
			<value>addss</value>
			<value>comiss</value>
			<value>divss</value>
			<value>maxss</value>
			<value>minss</value>
			<value>mulss</value>
			<value>rcpss</value>
			<value>rsqrtss</value>
			<value>sqrtss</value>
			<value>subss</value>
			<value>ucomiss</value>
		</item>
		<item type="constant" name="sse_xmmm32_xmm">
			<value>movss</value>
		</item>
		<item type="constant" name="sse_m128_xmm">
			<value>movntps</value>
		</item>		
		<item type="constant" name="sse_xmm_xmmm128">
			<value>addps</value>
			<value>andps</value>
			<value>andnps</value>
			<value>divpd</value>
			<value>divps</value>
			<value>maxps</value>
			<value>minps</value>
			<value>movaps</value>
			<value>movups</value>
			<value>mulps</value>
			<value>orps</value>
			<value>rcpps</value>
			<value>rsqrtps</value>
			<value>sqrtps</value>
			<value>subps</value>
			<value>unpckhps</value>
			<value>unpcklps</value>
			<value>xorpd</value>
		</item>
		<item type="constant" name="sse_xmmm128_xmm">
			<value>movaps</value>
			<value>movups</value>
		</item>	
		<item type="constant" name="sse_mmx_r32m16_imm8">
			<value>pinsrw</value>
		</item>			
		<item type="constant" name="sse_reg_xmm_imm8">
			<value>pextrw</value>
		</item>	
		<item type="constant" name="sse_xmm_xmmm32_imm8">
			<value>cmpss</value>
		</item>	
		<item type="constant" name="sse_xmm_xmmm64_imm8">
			<value>cmpsd</value>
		</item>	
		<item type="constant" name="sse_xmm_xmmm128_imm8">
			<value>cmpps</value>
			<value>shufps</value>
		</item>


		<!-- sse2 -->
		
		<item type="constant" name="sse2_mmx_mmxm64">
			<value>pmuludq</value>
			<value>psubq</value>
		</item>		
		<item type="constant" name="sse2_reg_xmm">
			<value>movmskpd</value>
			<value>pmovmskb</value>
		</item>
		<item type="constant" name="sse2_r32_xmmm64">
			<value>cvtsd2si</value>
			<value>cvttsd2si</value>
		</item>
		<item type="constant" name="sse2_r64_xmmm64">
			<value>cvtsd2si</value>
			<value>cvttsd2si</value>
		</item>	
		<item type="constant" name="sse2_xmm_rm32">
			<value>cvtsi2sd</value>
			<value>movd</value>
		</item>
		<item type="constant" name="sse2_rm32_xmm">
			<value>movd</value>
		</item>		
		<item type="constant" name="sse2_xmm_rm64">
			<value>cvtsi2sd</value>
			<value>movq</value>
		</item>	
		<item type="constant" name="sse2_xmm_m64">
			<value>movhpd</value>
			<value>movlpd</value>
			<value>movq</value>
			<value>movsd</value>
		</item>
		<item type="constant" name="sse2_m64_xmm">
			<value>movhpd</value>
			<value>movlpd</value>
		</item>		
		<item type="constant" name="sse2_rm64_xmm">
			<value>movq</value>
		</item>	
		<item type="constant" name="sse2_xmm_xmmm32">
			<value>cvtss2sd</value>
		</item>	
		<item type="constant" name="sse2_xmm_xmm">
			<!--<value>maskmovdqu</value>-->
			<value>movsd</value>
		</item>	
		<item type="constant" name="sse2_xmm_imm8">
			<value>pslldq</value>
			<value>psllw</value>
			<value>pslld</value>
			<value>psllq</value>
			<value>psraw</value>
			<value>psrad</value>
			<value>psrldq</value>
			<value>psrlw</value>
			<value>psrld</value>
			<value>psrlq</value>
		</item>				
		<item type="constant" name="sse2_xmm_xmmm64">
			<value>addsd</value>
			<value>comisd</value>
			<value>cvtdq2pd</value>
			<value>cvtps2pd</value>
			<value>cvtsd2ss</value>
			<!--<value>cvttpd2dq</value>-->
			<value>divsd</value>
			<value>maxsd</value>
			<value>minsd</value>
			<value>movq</value>
			<value>mulsd</value>
			<value>sqrtsd</value>
			<value>subsd</value>
		</item>
		<item type="constant" name="sse2_xmmm64_xmm">
			<value>movq</value>
			<value>movsd</value>
		</item>
		<item type="constant" name="sse2_m128_xmm">
			<value>movntdq</value>
			<value>movntpd</value>
		</item>
		<item type="constant" name="sse2_xmm_xmmm128">
			<value>addpd</value>
			<value>andpd</value>
			<value>andnpd</value>
			<value>cvtdq2ps</value>
			<value>cvtpd2dq</value>
			<value>cvtpd2ps</value>
			<value>cvtps2dq</value>
			<value>cvttps2dq</value>
			<value>maxpd</value>
			<value>minpd</value>
			<value>movapd</value>
			<value>movdqa</value>
			<value>movdqu</value>
			<value>movupd</value>
			<value>mulpd</value>
			<value>orpd</value>
			<value>packsswb</value>
			<value>packssdw</value>
			<value>packuswb</value>
			<value>paddb</value>
			<value>paddw</value>
			<value>paddd</value>
			<value>paddq</value>
			<value>paddsb</value>
			<value>paddsw</value>
			<value>paddusb</value>
			<value>paddusw</value>
			<value>pand</value>
			<value>pandn</value>
			<value>pavgb</value>
			<value>pavgw</value>
			<value>pcmpeqb</value>
			<value>pcmpeqw</value>
			<value>pcmpeqd</value>
			<value>pcmpgtb</value>
			<value>pcmpgtw</value>
			<value>pcmpgtd</value>
			<value>pmaddwd</value>
			<value>pmaxub</value>
			<value>pminsw</value>
			<value>pminub</value>
			<value>pmulhuw</value>
			<value>pmulhw</value>
			<value>pmullw</value>
			<value>pmuludq</value>
			<value>por</value>
			<value>psadbw</value>
			<value>psllw</value>
			<value>pslld</value>
			<value>psllq</value>
			<value>psraw</value>
			<value>psrad</value>
			<value>psrlw</value>
			<value>psrld</value>
			<value>psrlq</value>
			<value>psubb</value>
			<value>psubw</value>
			<value>psubd</value>
			<value>psubq</value>
			<value>psubsb</value>
			<value>psubsw</value>
			<value>psubusb</value>
			<value>psubusw</value>
			<value>punpckhbw</value>
			<value>punpckhwd</value>
			<value>punpckhdq</value>
			<value>punpckhqdq</value>
			<value>punpcklbw</value>
			<value>punpcklwd</value>
			<value>punpckldq</value>
			<value>punpcklqdq</value>
			<value>pxor</value>
			<value>sqrtpd</value>
			<value>subpd</value>
			<value>unpckhpd</value>
			<value>unpcklpd</value>
			<value>xorpd</value>
		</item>
		<item type="constant" name="sse2_xmmm128_xmm">
			<value>movapd</value>
			<value>movdqa</value>
			<value>movdqu</value>
			<value>movupd</value>
		</item>

		<item type="constant" name="sse2_xmm_r32m16_imm8">
			<value>pinsrw</value>
		</item>			
		<item type="constant" name="sse2_reg_xmm_imm8">
			<value>pextrw</value>
		</item>	
		<item type="constant" name="sse2_xmm_xmmm128_imm8">
			<value>cmppd</value>
			<value>pshufd</value>
			<value>pshufhw</value>
			<value>pshuflw</value>
			<value>shufpd</value>
		</item>


		<!-- sse3 -->
		<item type="constant" name="sse3_mmx_mmxm64">
			<value>pabsb</value>
			<value>pabsw</value>
			<value>pabsd</value>
			<value>psignb</value>
			<value>psignw</value>
			<value>psignd</value>
		</item>			
		<item type="constant" name="sse3_xmm_xmmm64">
			<value>movddup</value>
		</item>		
		<item type="constant" name="sse3_xmm_m128">
			<value>lddqu</value>
		</item>
		<item type="constant" name="sse3_xmm_xmmm128">
			<value>addsubpd</value>
			<value>addsubps</value>
			<value>haddpd</value>
			<value>haddps</value>
			<value>hsubpd</value>
			<value>hsubps</value>
			<value>movshdup</value>
			<value>movsldup</value>
			<value>pabsb</value>
			<value>pabsw</value>
			<value>pabsd</value>
			<value>psignb</value>
			<value>psignw</value>
			<value>psignd</value>
		</item>

		<!-- ssse3 -->
		<item type="constant" name="ssse3_mmx_mmxm64">
			<value>phaddw</value>
			<value>phaddd</value>
			<value>phaddsw</value>
			<value>phsubw</value>
			<value>phsubd</value>
			<value>phsubsw</value>
			<value>pmaddubsw</value>
			<value>pmulhrsw</value>
			<value>pshufb</value>
		</item>	
		<item type="constant" name="ssse3_xmm_xmmm128">
			<value>phaddw</value>
			<value>phaddd</value>
			<value>phaddsw</value>
			<value>phsubw</value>
			<value>phsubd</value>
			<value>phsubsw</value>
			<value>pmaddubsw</value>
			<value>pmulhrsw</value>
			<value>pshufb</value>
		</item>	

		<item type="constant" name="ssse3_mmx_mmxm64_imm8">
			<value>palignr</value>
		</item>
		<item type="constant" name="ssse3_mmx_mmxm128_imm8">
			<value>palignr</value>
		</item>




		<!-- sse41 -->

		<item type="constant" name="sse41_xmm_m128">
			<value>movntdqa</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm64">
			<value>pmovsxbw</value>
			<value>pmovsxwd</value>
			<value>pmovsxdq</value>
			<value>pmovzxbw</value>
			<value>pmovzxwd</value>
			<value>pmovzxdq</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm32">
			<value>pmovsxbd</value>
			<value>pmovsxwq</value>
			<value>pmovzxbd</value>
			<value>pmovzxwq</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm16">
			<value>pmovsxbq</value>
			<value>pmovzxbq</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm128">
			<value>packusdw</value>
			<value>pcmpeqq</value>
			<value>phminposuw</value>
			<value>pmaxsb</value>
			<value>pmaxsd</value>
			<value>pmaxuw</value>
			<value>pmaxud</value>
			<value>pminsb</value>
			<value>pminsd</value>
			<value>pminuw</value>
			<value>pminud</value>
			<value>pmuldq</value>
			<value>pmulld</value>
			<value>ptest</value>
		</item>

		<item type="constant" name="sse41_regm8_xmm_imm8">
			<value>pextrb</value>
		</item>
		<item type="constant" name="sse41_regm16_xmm_imm8">
			<value>pextrw</value>
		</item>					
		<item type="constant" name="sse41_rm32_xmm_imm8">
			<value>extractps</value>
			<value>pextrd</value>
		</item>
		<item type="constant" name="sse41_xmm_rm32_imm8">
			<value>pinsrd</value>
		</item>
		<item type="constant" name="sse41_xmm_r32m8_imm8">
			<value>pinsrb</value>
		</item>
		<item type="constant" name="sse41_rm64_xmm_imm8">
			<value>pextrq</value>
		</item>
		<item type="constant" name="sse41_xmm_rm64_imm8">
			<value>pinsrq</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm32_imm8">
			<value>insertps</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm64_imm8">
			<value>roundsd</value>
		</item>					
		<item type="constant" name="sse41_xmm_xmmm128_imm8">
			<value>blendpd</value>
			<value>blendps</value>
			<value>dppd</value>
			<value>dpps</value>
			<value>mpsadbw</value>
			<value>pblendw</value>
			<value>roundpd</value>
			<value>roundps</value>
		</item>
		<item type="constant" name="sse41_xmm_xmmm128_xmm0">
			<value>blendvpd</value>
			<value>blendvps</value>
			<value>pblendvb</value>
		</item>


		<!-- sse42 -->
		<item type="constant" name="sse42_xmm_xmmm128">
			<value>pcmpgtq</value>
			<value>pmaxsw</value>
		</item>		
		<item type="constant" name="sse42_xmm_xmmm128_imm8">
			<value>pcmpestri</value>
			<value>pcmpestri</value>
			<value>pcmpistri</value>
			<value>pcmpistrm</value>
		</item>




		<!-- avx -->
		<item type="constant" name="avx_">
			<value>vzeroall</value>
			<value>vzeroupper</value>
		</item>	
		<item type="constant" name="avx_reg_xmm">
			<value>vmovmskpd</value>
			<value>vmovmskps</value>
			<value>vpmovmskb</value>
		</item>	
		<item type="constant" name="avx_xmm_m32">
			<value>vmovss</value>
			<value>vbroadcastss</value>
		</item>	
		<item type="constant" name="avx_xmm_rm32">
			<value>vmovd</value>
		</item>
		<item type="constant" name="avx_rm32_xmm">
			<value>vmovd</value>
		</item>
		<item type="constant" name="avx_m32_xmm">
			<value>vmovss</value>
		</item>
		<item type="constant" name="avx_xmm_rm64">
			<value>vmovq</value>
		</item>
		<item type="constant" name="avx_m64_xmm">
			<value>vmovhpd</value>
			<value>vmovhps</value>
			<value>vmovlpd</value>
			<value>movlps</value>
			<value>vmovsd</value>
		</item>
		<item type="constant" name="avx_xmm_m64">
			<value>vmovsd</value>
		</item>
		<item type="constant" name="avx_rm64_xmm">
			<value>vmovq</value>
		</item>
		<item type="constant" name="avx_xmm_m128">
			<value>vlddqu</value>
			<value>vmovntdqa</value>
		</item>
		<item type="constant" name="avx_m128_xmm">
			<value>vmovntdq</value>
			<value>vmovntpd</value>
			<value>vmovntps</value>
		</item>		
		<item type="constant" name="avx_r32_xmmm32">
			<value>vcvtss2si</value>
			<value>vcvttss2si</value>
		</item>	
		<item type="constant" name="avx_r64_xmmm32">
			<value>vcvtss2si</value>
			<value>vcvttss2si</value>
		</item>	
		<item type="constant" name="avx_r32_xmmm64">
			<value>vcvtsd2si</value>
			<value>vcvttsd2si</value>
		</item>	
		<item type="constant" name="avx_r64_xmmm64">
			<value>vcvtsd2si</value>
			<value>vcvttsd2si</value>
		</item>	
		<item type="constant" name="avx_xmm_xmmm16">
			<value>vpmovsxbq</value>
			<value>vpmovzxbq</value>
		</item>					
		<item type="constant" name="avx_xmm_xmmm32">
			<value>vcomiss</value>
			<value>vpmovsxbd</value>
			<value>vpmovsxwq</value>
			<value>vpmovzxbd</value>
			<value>vpmovzxwq</value>
			<value>vucomiss</value>
		</item>	
		<item type="constant" name="avx_xmm_xmmm64">
			<value>vcomisd</value>
			<value>vcvtdq2pd</value>
			<value>vcvtps2pd</value>
			<value>vmovddup</value>
			<value>vmovq</value>
			<value>vpmovsxbw</value>
			<value>vpmovsxwd</value>
			<value>vpmovsxdq</value>
			<value>vpmovzxbw</value>
			<value>vpmovzxwd</value>
			<value>vpmovzxdq</value>
		</item>	
		<item type="constant" name="avx_xmmm64_xmm">
			<value>vmovq</value>
		</item>	
		<item type="constant" name="avx_xmm_xmmm128">
			<value>vcvtdq2ps</value>
			<value>vcvtps2dq</value>
			<value>vcvttps2dq</value>
			<value>vmovapd</value>
			<value>vmovaps</value>
			<value>movdqa</value>
			<value>vmovdqu</value>
			<value>vmovshdup</value>
			<value>vmovsldup</value>
			<value>vmovupd</value>
			<value>vmovups</value>
			<value>vpabsb</value>
			<value>vpabsw</value>
			<value>vpabsd</value>
			<value>vphminposuw</value>
			<value>vptest</value>
			<value>vrcpps</value>
			<value>vrsqrtps</value>
			<value>vsqrtpd</value>
			<value>vsqrtps</value>
			<value>vtestps</value>
			<value>vtestpd</value>
		</item>	
		<item type="constant" name="avx_xmmm128_xmm">
			<value>vmovapd</value>
			<value>vmovaps</value>
			<value>movdqa</value>
			<value>vmovdqu</value>
			<value>vmovupd</value>
			<value>vmovups</value>
		</item>	
		<item type="constant" name="avx_xmm_xmm">
			<value>vmaskmovdqu</value>
		</item>	
		<item type="constant" name="avx_reg_ymm">
			<value>vmovmskpd</value>
			<value>vmovmskps</value>
		</item>	
		<item type="constant" name="avx_ymm_xmmm128">
			<value>vcvtdq2pd</value>
			<value>vcvtps2pd</value>
			
		</item>
		<item type="constant" name="avx_ymm_m32">
			<value>vbroadcastss</value>
		</item>
		<item type="constant" name="avx_ymm_m64">
			<value>vbroadcastss</value>
		</item>	
		<item type="constant" name="avx_ymm_m128">
			<value>vbroadcastf128</value>
			<!-- <value>vcvtpd2ps</value> -->
			<!-- <value>vcvttpd2dq</value> -->
			<!-- <value>vcvtpd2dq</value> -->
		</item>	
		<item type="constant" name="avx_ymm_m256">
			<value>vlddqu</value>
			<!-- <value>vcvtpd2ps</value> -->
			<!-- <value>vcvttpd2dq</value> -->
			<!-- <value>vcvtpd2dq</value> -->
		</item>		
		<item type="constant" name="avx_m256_ymm">
			<value>vmovntdq</value>
			<value>vmovntpd</value>
			<value>vmovntps</value>
			
		</item>		
		<item type="constant" name="avx_ymm_ymmm256">
			<value>vcvtdq2ps</value>
			<value>vcvtps2dq</value>
			<value>vcvttps2dq</value>
			<value>vmovapd</value>
			<value>vmovaps</value>
			<value>vmovddup</value>
			<value>vmovdqa</value>
			<value>vmovdqu</value>
			<value>vmovshdup</value>
			<value>vmovsldup</value>
			<value>vmovupd</value>
			<value>vmovups</value>
			<value>vptest</value>
			<value>vrcpps</value>
			<value>vrsqrtps</value>
			<value>vsqrtpd</value>
			<value>vsqrtps</value>
			<value>vtestps</value>
			<value>vtestpd</value>
		</item>
		<item type="constant" name="avx_ymmm256_ymm">
			<value>vmovapd</value>
			<value>vmovaps</value>
			<value>vmovdqa</value>
			<value>vmovdqu</value>
			<value>vmovupd</value>
			<value>vmovups</value>
		</item>

		<item type="constant" name="avx_xmm_xmm_rm32">
			<value>vcvtsi2sd</value>
			<value>vcvtsi2ss</value>
		</item>
		<item type="constant" name="avx_reg_xmm_imm8">
			<value>vpextrw</value>
		</item>	
		<item type="constant" name="avx_regm8_xmm_imm8">
			<value>vpextrb</value>
		</item>
		<item type="constant" name="avx_regm16_xmm_imm8">
			<value>vpextrw</value>
		</item>		
		<item type="constant" name="avx_rm32_xmm_imm8">
			<value>vextractps</value>
			<value>vpextrd</value>
		</item>	
		<item type="constant" name="avx_rm64_xmm_imm8">
			<value>vpextrq</value>
		</item>		
		<item type="constant" name="avx_xmm_xmm_rm64">
			<value>vcvtsi2sd</value>
			<value>vcvtsi2ss</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_m64">
			<value>vmovhpd</value>
			<value>vmovhps</value>
			<value>vmovlpd</value>
			<value>vmovlps</value>
		</item>	
		<item type="constant" name="avx_xmm_xmm_m128">
			<value>vmaskmovps</value>
			<value>vmaskmovpd</value>
		</item>	
		<item type="constant" name="avx_m128_xmm_xmm">
			<value>vmaskmovps</value>
			<value>vmaskmovpd</value>
		</item>	
		<item type="constant" name="avx_xmm_xmm_xmm">
			<value>vmovhlps</value>
			<value>vmovlhps</value>
			<value>vmovsd</value>
			<value>vmovss</value>
		</item>					
		<item type="constant" name="avx_xmm_xmm_xmmm32">
			<value>vaddss</value>
			<value>vcvtss2sd</value>
			<value>vdivss</value>
			<value>vmaxss</value>
			<value>vminss</value>
			<value>vmulss</value>
			<value>vrcpss</value>
			<value>vrsqrtss</value>
			<value>vsqrtss</value>
			<value>vsubss</value>
		</item>	
		<item type="constant" name="avx_xmm_xmm_xmmm64">
			<value>vaddsd</value>
			<value>vcvtsd2ss</value>
			<value>vdivsd</value>
			<value>vmaxsd</value>
			<value>vminsd</value>
			<value>vmulsd</value>
			<value>vsqrtsd</value>
			<value>vsubsd</value>
		</item>
		
		<item type="constant" name="avx_xmm_xmm_imm8">
			<value>vpslldq</value>
			<value>vpsraw</value>
			<value>vpsrad</value>
			<value>vpsrldq</value>
			<value>vpsrlw</value>
			<value>vpsrld</value>
			<value>vpsrlq</value>
		</item>	
		<item type="constant" name="avx_xmm_xmmm128_imm8">
			<value>vpcmpestri</value>
			<value>vpcmpestri</value>
			<value>vpcmpistri</value>
			<value>vpcmpistrm</value>
			<value>vpshufd</value>
			<value>vpshufhw</value>
			<value>vpshuflw</value>
			<!--<value>vpsllw</value>-->
			<!--<value>vpslld</value>-->
			<!--<value>vpsllq</value>-->
			<value>vroundpd</value>
			<value>vroundps</value>
			<value>vpermilpd</value>
			<value>vpermilps</value>
		</item>			
		<item type="constant" name="avx_xmm_xmm_xmmm128">
			<value>vaddpd</value>
			<value>vaddps</value>
			<value>vaddsubpd</value>
			<value>vaddsubps</value>
			<value>vandpd</value>
			<value>vandps</value>
			<value>vandnpd</value>
			<value>vandnps</value>
			<value>vdivpd</value>
			<value>vdivps</value>
			<value>vhaddpd</value>
			<value>vhaddps</value>
			<value>vhsubpd</value>
			<value>vhsubps</value>
			<value>vmaxpd</value>
			<value>vmaxps</value>
			<value>vminpd</value>
			<value>vminps</value>
			<value>vmulpd</value>
			<value>vmulps</value>
			<value>vorpd</value>
			<value>vorps</value>
			<value>vpacksswb</value>
			<value>vpackssdw</value>
			<value>vpackusdw</value>
			<value>vpackuswb</value>
			<value>vpaddb</value>
			<value>vpaddw</value>
			<value>vpaddd</value>
			<value>vpaddq</value>
			<value>vpaddsb</value>
			<value>vpaddsw</value>
			<value>vpaddusb</value>
			<value>vpaddusw</value>
			<value>vpand</value>
			<value>vpandn</value>
			<value>vpavgb</value>
			<value>vpavgw</value>
			<value>vpcmpeqb</value>
			<value>vpcmpeqw</value>
			<value>vpcmpeqd</value>
			<value>vpcmpeqq</value>
			<value>vpcmpgtb</value>
			<value>vpcmpgtw</value>
			<value>vpcmpgtd</value>
			<value>vpcmpgtq</value>
			<value>vphaddd</value>
			<value>vphaddw</value>
			<value>vphaddsw</value>
			<value>vphsubw</value>
			<value>vphsubd</value>
			<value>vphsubsw</value>
			<value>vpmaddubsw</value>
			<value>vpmaddwd</value>
			<value>vpmaxsb</value>
			<value>vpmaxsw</value>
			<value>vpmaxsd</value>
			<value>vpmaxub</value>
			<value>vpmaxuw</value>
			<value>vpmaxud</value>
			<value>vpminsb</value>
			<value>vpminsw</value>
			<value>vpminsd</value>
			<value>vpminub</value>
			<value>vpminuw</value>
			<value>vpminud</value>
			<value>vpmuldq</value>
			<value>vpmulhrsw</value>
			<value>vpmulhuw</value>
			<value>vpmulhw</value>
			<value>vpmulld</value>
			<value>vpmullw</value>
			<value>vpmuludq</value>
			<value>vpor</value>
			<value>vpsadbw</value>
			<value>vpshufb</value>
			<value>vpsignb</value>
			<value>vpsignw</value>
			<value>vpsignd</value>
			<!--<value>vpsllw</value>-->
			<!--<value>vpslld</value>-->
			<!--<value>vpsllq</value>-->
			<value>vpsraw</value>
			<value>vpsrad</value>
			<value>vpsrlw</value>
			<value>vpsrld</value>
			<value>vpsrlq</value>
			<value>vpsubb</value>
			<value>vpsubw</value>
			<value>vpsubd</value>
			<value>vpsubq</value>
			<value>vpsubsb</value>
			<value>vpsubsw</value>
			<value>vpsubusb</value>
			<value>vpsubusw</value>
			<value>vpunpckhbw</value>
			<value>vpunpckhwd</value>
			<value>vpunpckhdq</value>
			<value>vpunpckhqdq</value>
			<value>vpunpcklbw</value>
			<value>vpunpcklwd</value>
			<value>vpunpckldq</value>
			<value>vpunpcklqdq</value>
			<value>vpxor</value>
			<value>vsubpd</value>
			<value>vsubps</value>
			<value>vunpckhpd</value>
			<value>vunpckhps</value>
			<value>vunpcklpd</value>
			<value>vunpcklps</value>
			<value>vpermilpd</value>
			<value>vpermilps</value>
			<value>vxorpd</value>
			<value>vxorps</value>
		</item>
		<item type="constant" name="avx_xmmm128_ymm_imm8">
			<value>vextractf128</value>
		</item>		
		<item type="constant" name="avx_ymm_ymmm256_imm8">
			<value>vroundpd</value>
			<value>vroundps</value>
			<value>vpermilpd</value>
			<value>vpermilps</value>
			
		</item>	
		<item type="constant" name="avx_ymm_ymm_m256">
			<value>vmaskmovps</value>
			<value>vmaskmovpd</value>
		</item>
		<item type="constant" name="avx_m256_ymm_ymm">
			<value>vmaskmovps</value>
			<value>vmaskmovpd</value>
		</item>		
		<item type="constant" name="avx_ymm_ymm_ymmm256">
			<value>vaddpd</value>
			<value>vaddps</value>
			<value>vaddsubpd</value>
			<value>vaddsubps</value>
			<value>vandpd</value>
			<value>vandps</value>
			<value>vandnpd</value>
			<value>vandnps</value>
			<value>vdivpd</value>
			<value>vdivps</value>
			<value>vhaddpd</value>
			<value>vhaddps</value>
			<value>vhsubpd</value>
			<value>vhsubps</value>
			<value>vmaxpd</value>
			<value>vmaxps</value>
			<value>vminpd</value>
			<value>vminps</value>
			<value>vmulpd</value>
			<value>vmulps</value>
			<value>vorpd</value>
			<value>vorps</value>
			<value>vsubpd</value>
			<value>vsubps</value>
			<value>vunpckhpd</value>
			<value>vunpckhps</value>
			<value>vunpcklpd</value>
			<value>vunpcklps</value>
			<value>vpermilpd</value>
			<value>vpermilps</value>
			<value>vxorpd</value>
			<value>vxorps</value>
		</item>


		<item type="constant" name="avx_xmm_xmm_r32m8_imm8">
			<value>vpinsrb</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_r32m16_imm8">
			<value>vpinsrw</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_rm32_imm8">
			<value>vpinsrd</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_rm64_imm8">
			<value>vpinsrq</value>
		</item>	

		<item type="constant" name="avx_xmm_xmm_xmmm64_imm8">
			<value>vcmpsd</value>
			<value>vroundsd</value>
		</item>	
		<item type="constant" name="avx_xmm_xmm_xmmm128_imm8">
			<value>vblendpd</value>
			<value>vblendps</value>
			<value>vcmppd</value>
			<value>vcmpps</value>
			<value>vdppd</value>
			<value>vdpps</value>
			<value>vmpsadbw</value>
			<value>vpalignr</value>
			<value>vpblendw</value>
			<value>vshufpd</value>
			<value>vshufps</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_xmmm128_xmm">
			<value>vblendvpd</value>
			<value>vblendvps</value>
			<value>vpblendvb</value>
		</item>
		<item type="constant" name="avx_xmm_xmm_xmmm32_imm8">
			<value>vcmpss</value>
			<value>vinsertps</value>
		</item>
		<item type="constant" name="avx_ymm_ymm_xmmm128_imm8">
			<value>vinsertf128</value>
		</item>
		<item type="constant" name="avx_ymm_ymm_ymmm256_imm8">
			<value>vblendpd</value>
			<value>vblendps</value>
			<value>vcmppd</value>
			<value>vcmpps</value>
			<value>vdpps</value>
			<value>vshufpd</value>
			<value>vshufps</value>
			<value>vperm2f128</value>
		</item>
		<item type="constant" name="avx_ymm_ymm_ymmm256_ymm">
			<value>vblendvpd</value>
			<value>vblendvps</value>
		</item>





		<!-- avx2 -->

		<item type="constant" name="avx2_xmm_xmm">
			<value>vbroadcastss</value>
		</item>	
		<item type="constant" name="avx2_xmm_xmmm8">
			<value>vpbroadcastb</value>
		</item>	
		<item type="constant" name="avx2_xmm_xmmm16">
			<value>vpbroadcastw</value>
		</item>
		<item type="constant" name="avx2_xmm_xmmm32">
			<value>vpbroadcastd</value>
		</item>	
		<item type="constant" name="avx2_xmm_xmmm64">
			<value>vpbroadcastq</value>
		</item>		
		<item type="constant" name="avx2_reg_ymm">
			<value>vpmovmskb</value>
		</item>
		<item type="constant" name="avx2_ymm_xmm">
			<value>vbroadcastss</value>
			<value>vbroadcastsd</value>
		</item>
		<item type="constant" name="avx2_ymm_xmmm8">
			<value>vpbroadcastb</value>
		</item>
		<item type="constant" name="avx2_ymm_xmmm16">
			<value>vpbroadcastw</value>
		</item>				
		<item type="constant" name="avx2_ymm_xmmm32">
			<value>vpmovsxbq</value>
			<value>vpmovzxbq</value>
			<value>vpbroadcastd</value>
		</item>	
		<item type="constant" name="avx2_ymm_xmmm64">
			<value>vpmovsxbd</value>
			<value>vpmovsxwq</value>
			<value>vpmovzxbd</value>
			<value>vpmovzxwq</value>
			<value>vpbroadcastq</value>
		</item>	
		<item type="constant" name="avx2_ymm_xmmm128">
			<value>vpmovsxbw</value>
			<value>vpmovsxwd</value>
			<value>vpmovsxdq</value>
			<value>vpmovzxbw</value>
			<value>vpmovzxwd</value>
			<value>vpmovzxdq</value>
		</item>	
		<item type="constant" name="avx2_ymm_m128">
			<value>vbroadcasti128</value>
		</item>			
		<item type="constant" name="avx2_ymm_m256">
			<value>vmovntdqa</value>
		</item>	
		<item type="constant" name="avx2_ymm_ymmm256">
			<value>vmovntdqa</value>
			<value>vpabsb</value>
			<value>vpabsw</value>
			<value>vpabsd</value>
		</item>
		<item type="constant" name="avx2_xmm_xmm_m128">
			<value>vpmaskmovd</value>
			<value>vpmaskmovq</value>
		</item>
		<item type="constant" name="avx2_xmm_xmm_xmmm128">
			<value>vpsllvd</value>
			<value>vpsllvq</value>
			<value>vpsravd</value>
			<value>vpsrlvd</value>
			<value>vpsrlvq</value>
		</item>
		<item type="constant" name="avx2_m128_xmm_xmm">
			<value>vpmaskmovd</value>
			<value>vpmaskmovq</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_m256">
			<value>vpmaskmovd</value>
			<value>vpmaskmovq</value>
		</item>
		<item type="constant" name="avx2_m256_ymm_ymm">
			<value>vpmaskmovd</value>
			<value>vpmaskmovq</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_imm8">
			<value>vpslldq</value>
			<!--<value>vpsllw</value>-->
			<!--<value>vpslld</value>-->
			<!--<value>vpsllq</value>-->
			<value>vpsraw</value>
			<value>vpsrad</value>
			<value>vpsrldq</value>
			<value>vpsrlw</value>
			<value>vpsrld</value>
			<value>vpsrlq</value>
		</item>
		<item type="constant" name="avx2_xmmm128_ymm_imm8">
			<value>vextracti128</value>
		</item>
		<item type="constant" name="avx2_ymm_ymmm256_imm8">
			<value>vpshufd</value>
			<value>vpshufhw</value>
			<value>vpshuflw</value>
			<value>vpermpd</value>
			<value>vpermq</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_xmmm128">
			<!--<value>vpsllw</value>-->
			<!--<value>vpslld</value>-->
			<!--<value>vpsllq</value>-->
			<value>vpsraw</value>
			<value>vpsrad</value>
			<value>vpsrlw</value>
			<value>vpsrld</value>
			<value>vpsrlq</value>
		</item>		
		<item type="constant" name="avx2_ymm_ymm_ymmm256">
			<value>vpacksswb</value>
			<value>vpackssdw</value>
			<value>vpackusdw</value>
			<value>vpackuswb</value>
			<value>vpaddb</value>
			<value>vpaddw</value>
			<value>vpaddd</value>
			<value>vpaddq</value>
			<value>vpaddsb</value>
			<value>vpaddsw</value>
			<value>vpaddusb</value>
			<value>vpaddusw</value>
			<value>vpand</value>
			<value>vpandn</value>
			<value>vpavgb</value>
			<value>vpavgw</value>
			<value>vpcmpeqb</value>
			<value>vpcmpeqw</value>
			<value>vpcmpeqd</value>
			<value>vpcmpeqq</value>
			<value>vpcmpgtb</value>
			<value>vpcmpgtw</value>
			<value>vpcmpgtd</value>
			<value>vpcmpgtq</value>
			<value>vphaddd</value>
			<value>vphaddw</value>
			<value>vphaddsw</value>
			<value>vphsubw</value>
			<value>vphsubd</value>
			<value>vphsubsw</value>
			<value>vpmaddubsw</value>
			<value>vpmaddwd</value>
			<value>vpmaxsb</value>
			<value>vpmaxsw</value>
			<value>vpmaxsd</value>
			<value>vpmaxub</value>
			<value>vpmaxuw</value>
			<value>vpmaxud</value>
			<value>vpminsb</value>
			<value>vpminsw</value>
			<value>vpminsd</value>
			<value>vpminub</value>
			<value>vpminuw</value>
			<value>vpminud</value>
			<value>vpmuldq</value>
			<value>vpmulhrsw</value>
			<value>vpmulhuw</value>
			<value>vpmulhw</value>
			<value>vpmulld</value>
			<value>vpmullw</value>
			<value>vpmuludq</value>
			<value>vpor</value>
			<value>vpsadbw</value>
			<value>vpshufb</value>
			<value>vpsignb</value>
			<value>vpsignw</value>
			<value>vpsignd</value>
			<value>vpsubb</value>
			<value>vpsubw</value>
			<value>vpsubd</value>
			<value>vpsubq</value>
			<value>vpsubsb</value>
			<value>vpsubsw</value>
			<value>vpsubusb</value>
			<value>vpsubusw</value>
			<value>vpunpckhbw</value>
			<value>vpunpckhwd</value>
			<value>vpunpckhdq</value>
			<value>vpunpckhqdq</value>
			<value>vpunpcklbw</value>
			<value>vpunpcklwd</value>
			<value>vpunpckldq</value>
			<value>vpunpcklqdq</value>
			<value>vpxor</value>
			<value>vpermd</value>
			<value>vpermps</value>
			<value>vpsllvd</value>
			<value>vpsllvq</value>
			<value>vpsravd</value>
			<value>vpsrlvd</value>
			<value>vpsrlvq</value>
			
		</item>
		<item type="constant" name="avx2_xmm_xmm_xmmm128_imm8">
			<value>vpblendd</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_xmmm128_imm8">
			<value>vinserti128</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_ymmm256_imm8">
			<value>vmpsadbw</value>
			<value>vpalignr</value>
			<value>vpblendw</value>
			<value>vpblendd</value>
			<value>vperm2i128</value>
		</item>
		<item type="constant" name="avx2_ymm_ymm_ymmm256_ymm">
			<value>vpblendvb</value>
		</item>
		


		<!-- fma -->
		<item type="constant" name="fma_xmm_xmm_xmmm32">
			<value>vfmadd132ss</value>
			<value>vfmadd213ss</value>
			<value>vfmadd231ss</value>
			<value>vfmsub132ss</value>
			<value>vfmsub213ss</value>
			<value>vfmsub231ss</value>
			<value>vfnmadd132ss</value>
			<value>vfnmadd213ss</value>
			<value>vfnmadd231ss</value>
			<value>vfnmsub132ss</value>
			<value>vfnmsub213ss</value>
			<value>vfnmsub231ss</value>
		</item>	
		<item type="constant" name="fma_xmm_xmm_xmmm64">
			<value>vfmadd132sd</value>
			<value>vfmadd213sd</value>
			<value>vfmadd231sd</value>
			<value>vfmsub132sd</value>
			<value>vfmsub213sd</value>
			<value>vfmsub231sd</value>
			<value>vfnmadd132sd</value>
			<value>vfnmadd213sd</value>
			<value>vfnmadd231sd</value>
			<value>vfnmsub132sd</value>
			<value>vfnmsub213sd</value>
			<value>vfnmsub231sd</value>
		</item>	
		<item type="constant" name="fma_xmm_xmm_xmmm128">
			<value>vfmadd</value>
			<value>vfmadd213pd</value>
			<value>vfmadd231pd</value>
			<value>vfmadd132ps</value>
			<value>vfmadd213ps</value>
			<value>vfmadd231ps</value>
			<value>vfmaddsub132pd</value>
			<value>vfmaddsub213pd</value>
			<value>vfmaddsub231pd</value>
			<value>vfmaddsub132ps</value>
			<value>vfmaddsub213ps</value>
			<value>vfmaddsub231ps</value>
			<value>vfmsubadd132pd</value>
			<value>vfmsubadd213pd</value>
			<value>vfmsubadd231pd</value>
			<value>vfmsubadd132ps</value>
			<value>vfmsubadd213ps</value>
			<value>vfmsubadd231ps</value>
			<value>vfmsub132pd</value>
			<value>vfmsub213pd</value>
			<value>vfmsub231pd</value>
			<value>vfmsub132ps</value>
			<value>vfmsub213ps</value>
			<value>vfmsub231ps</value>
			<value>vfnmadd132pd</value>
			<value>vfnmadd213pd</value>
			<value>vfnmadd231pd</value>
			<value>vfnmadd132ps</value>
			<value>vfnmadd213ps</value>
			<value>vfnmadd231ps</value>
			<value>vfnmsub132pd</value>
			<value>vfnmsub213pd</value>
			<value>vfnmsub231pd</value>
			<value>vfnmsub132ps</value>
			<value>vfnmsub213ps</value>
			<value>vfnmsub231ps</value>
		</item>	
		<item type="constant" name="fma_ymm_ymm_ymmm256">
			<value>vfmadd231pd</value>
			<value>vfmadd132pd</value>
			<value>vfmadd213pd</value>
			<value>vfmadd132ps</value>
			<value>vfmadd213ps</value>
			<value>vfmadd231ps</value>
			<value>vfmaddsub132pd</value>
			<value>vfmaddsub213pd</value>
			<value>vfmaddsub231pd</value>
			<value>vfmaddsub132ps</value>
			<value>vfmaddsub213ps</value>
			<value>vfmaddsub231ps</value>
			<value>vfmsubadd132pd</value>
			<value>vfmsubadd213pd</value>
			<value>vfmsubadd231pd</value>
			<value>vfmsubadd132ps</value>
			<value>vfmsubadd213ps</value>
			<value>vfmsubadd231ps</value>
			<value>vfmsub132pd</value>
			<value>vfmsub213pd</value>
			<value>vfmsub231pd</value>
			<value>vfmsub132ps</value>
			<value>vfmsub213ps</value>
			<value>vfmsub231ps</value>
			<value>vfnmadd132pd</value>
			<value>vfnmadd213pd</value>
			<value>vfnmadd231pd</value>
			<value>vfnmadd132ps</value>
			<value>vfnmadd213ps</value>
			<value>vfnmadd231ps</value>
			<value>vfnmsub132pd</value>
			<value>vfnmsub213pd</value>
			<value>vfnmsub231pd</value>
			<value>vfnmsub132ps</value>
			<value>vfnmsub213ps</value>
			<value>vfnmsub231ps</value>
		</item>	


	</typeDefinitions>
	<commentFormat><value/></commentFormat>
	<identifierFormat>n<value /></identifierFormat>
	<labelFormat><value/>: </labelFormat>
	<uniqueTagFormat><value /></uniqueTagFormat>
	<prologue id="globalPrologue"/>
	<epilogue id="globalEpilogue"/>
	<sections>
		<section id="bitString" prologueEpilogueCompulsory="false">
			<prologue id="sectionPrologue">
				<expression>
						.data

						m8_init_1:
							.byte 0xff
						m8_init_2:
							.byte 0x5a
						m8_init_3:
							.byte 0xa5
						m8_init_4:
							.byte 0x00

						.align 2
						m16_init_1:
							.short 0xffff
						.align 2
						m16_init_2:
							.short 0xa55a
						.align 2
						m16_init_3:
							.short 0x5a5a
						.align 2
						m16_init_4:
							.short 0x0000							

						.align 4
						m32_init_1:
							.long 0xffffffff
						.align 4
						m32_init_2:
							.long 0xa5a55a5a
						.align 4
						m32_init_3:
							.long 0x5a5aa5a5
						.align 4
						m32_init_4:
							.long 0x00000000

						.align 8
						m64_init_1:
							.long 0xffffffff
							.long 0xffffffff
						.align 8
						m64_init_2:
							.long 0xa5a5a5a5
							.long 0x5a5a5a5a
						.align 8
						m64_init_3:
							.long 0x5a5a5a5a
							.long 0xa5a5a5a5
						.align 8
						m64_init_4:
							.long 0x00000000	
							.long 0x00000000							

						
						m80_init_1:
							.byte 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
						
						m80_init_2:
							.byte 0xa5,0xa5,0xa5,0xa5,0xa5,0x5a,0x5a,0x5a,0x5a,0x5a
						
						m80_init_3:
							.byte 0x5a,0x5a,0x5a,0x5a,0x5a,0xa5,0xa5,0xa5,0xa5,0xa5
						
						m80_init_4:
							.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00	


						.align 16
						m128_init_1:
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
						.align 16
						m128_init_2:
							.long 0xa5a5a5a5
							.long 0x5a5a5a5a							
							.long 0x5a5a5a5a
							.long 0xa5a5a5a5							
						.align 16
						m128_init_3:
							.long 0x5a5a5a5a
							.long 0xa5a5a5a5							
							.long 0xa5a5a55a
							.long 0xa5a5aaaa							
						.align 16
						m128_init_4:
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000


						.align 32
						m256_init_1:
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
							.long 0xffffffff
						.align 32
						m256_init_2:
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa								
							.long 0x55555555
							.long 0x55555555
							.long 0x55555555
							.long 0x55555555							
						.align 32
						m256_init_3:
							.long 0x55555555
							.long 0x55555555
							.long 0x55555555
							.long 0x55555555								
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa
							.long 0xaaaaaaaa								
						.align 32
						m256_init_4:
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000	
							.long 0x00000000							

						# fpu
						.align 2
						m16int_init_1:
							.short 0xffff
						m16int_init_2:
							.short 0xa5a5
						m16int_init_3:
							.short 0x5a5a
						m16int_init_4:
							.short 0x0000
						
						.align 4
						m32int_init_1:
							.long 0xffffffff
						m32int_init_2:
							.long 0xa5a5a5a5
						m32int_init_3:
							.long 0x5a5a5a5a
						m32int_init_4:
							.long 0x00000000

						.align 8
						m64int_init_1:
							.long 0xffffffff
							.long 0xffffffff
						m64int_init_2:
							.long 0xa5a5a5a5
							.long 0xa5a5a5a5
						m64int_init_3:
							.long 0x5a5a5a5a
							.long 0x5a5a5a5a
						m64int_init_4:
							.long 0x00000000
							.long 0x00000000
							
						.align 4
						m32fp_init_1:
							.float 0.000001
						m32fp_init_2:
							.float -0.000001
						m32fp_init_3:
							.float -999.99999
						m32fp_init_4:
							.float 999.99999					
						
						.align 8
						m64fp_init_1:
							.double 0.0000000001
						m64fp_init_2:
							.double -0.0000000001
						m64fp_init_3:
							.double -99999.9999999
						m64fp_init_4:
							.double  9999.99999999


						# ymm init
						.align 32
						.simdvalue:
							.long   0xaaaaaaaa
							.long   0x55555555
							.long   0x33333333
							.long   0xcccccccc
							.long   0xaaaaaaaa
							.long   0x55555555
							.long   0x33333333
							.long   0xcccccccc

						.text
						.globl	evolved_function
						.type	evolved_function, @function
					evolved_function:
					.LFB0:
						.cfi_startproc

						pushq   %rbp
						#.cfi_def_cfa_offset 8
						#.cfi_offset 5, -8
						movq    %rsp, %rbp
						#.cfi_def_cfa_register 5

						pushq %rbx
						pushq %rcx
						pushq %rdx

						#reg init
						mov $0x55555555, %rax
						mov $0x33333333, %rbx
						mov $0x22222222, %rdx
						mov $0x44444444, %rsi
						mov $0x77777777, %rdi
				
						fldpi
						fldpi
						fldpi
						fldpi
						fldpi
						fldpi
						fldpi
						
						vmovdqa .simdvalue(%rip), %ymm0
						vmovdqa .simdvalue(%rip), %ymm1
						vmovdqa .simdvalue(%rip), %ymm2
						vmovdqa .simdvalue(%rip), %ymm3
						vmovdqa .simdvalue(%rip), %ymm4
						vmovdqa .simdvalue(%rip), %ymm5
						vmovdqa .simdvalue(%rip), %ymm6
						vmovdqa .simdvalue(%rip), %ymm7
						vmovdqa .simdvalue(%rip), %ymm8
						vmovdqa .simdvalue(%rip), %ymm9
						vmovdqa .simdvalue(%rip), %ymm10
						vmovdqa .simdvalue(%rip), %ymm11
						vmovdqa .simdvalue(%rip), %ymm12
						vmovdqa .simdvalue(%rip), %ymm13
						vmovdqa .simdvalue(%rip), %ymm14
						vmovdqa .simdvalue(%rip), %ymm15
				
						mov $50000000, %rcx  #leave for i--
						#subq    $304, %rsp

					.LOOP:
				</expression>
			</prologue>

			

			<epilogue id="sectionEpilogue">
				<expression>

						#sub $1,%rcx #remove this and below comment for fixed iterations
						#cmp $0, %rcx
						#jne 	.LOOP
						#jmp    .LOOP
						#leave
						#.cfi_restore 5
						#.cfi_def_cfa 4, 4
						#retq
						
						popq %rdx
						popq %rcx
						popq %rbx
						
						movq %rbp, %rsp
						popq %rbp
						retq
						
						.cfi_endproc
					.LFE0:
						.size	evolved_function, .-evolved_function
						.ident	"MicroGP"
						.section	.note.GNU-stack,"",@progbits
				</expression>
			</epilogue>

			<subSections>
				<subSection id="main" maxOccurs="1" minOccurs="1" maxReferences="0">
					<prologue id="stringPrologue"/>
					<epilogue id="stringEpilogue"/>
					
					<macros maxOccurs="3000" minOccurs="100" averageOccurs="800" sigma="700">

						<!-- legacy two operands -->
							<!-- 8 bit-->
						<macro id="_legacy_r8_r8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r8_r8" name="ins" />
								<item type="definedType" ref="r8" name="op2" />
								<item type="definedType" ref="r8" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r8_m8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r8_m8" name="ins" />
								<item type="definedType" ref="r8" name="op2" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_m8_r8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m8_r8" name="ins" />
								<item type="definedType" ref="m8" name="op2" />
								<item type="definedType" ref="r8" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r8_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r8_imm8" name="ins" />
								<item type="definedType" ref="r8" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m8_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m8_imm8" name="ins" />
								<item type="definedType" ref="m8" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m8_m8" weight="0" >  <!-- special -->
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m8_m8" name="ins" />
								<item type="definedType" ref="m8" name="op2" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>						
							<!-- 16 bit-->
						<macro id="_legacy_r16_r16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_r16" name="ins" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="definedType" ref="r16" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r16_m16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_m16" name="ins" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="definedType" ref="m16" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_m16_r16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m16_r16" name="ins" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="definedType" ref="r16" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_imm8" name="ins" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m16_imm8" name="ins" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_r16_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_imm16" name="ins" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m16_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m16_imm16" name="ins" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m16_m16" weight="0" > <!-- special -->
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m16_m16" name="ins" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="definedType" ref="m16" name="op1" />
							</parameters>
						</macro>
							<!-- 32 bit-->
						<macro id="_legacy_r32_r32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_r32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="r32" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r32_m32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_m32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_m32_r32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32_r32" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="definedType" ref="r32" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_imm8" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32_imm8" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="integer"  base="dec" minimum="-128" maximum="127" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_r32_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_imm16" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m32_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32_imm16" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>						
						<macro id="_legacy_r32_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_imm32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m32_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32_imm32" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m32_m32" weight="0" > <!-- special -->
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32_m32" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r32_m8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_m8" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r32_r8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_r8" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="r8" name="op1" />
							</parameters>
						</macro>						
						<macro id="_legacy_r32_m16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_m16" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="m16" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r32_r16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_r16" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="r16" name="op1" />
							</parameters>
						</macro>
							<!-- 64 bit-->
						<macro id="_legacy_r64_r64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_r64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="r64" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r64_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_m64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_m64_r64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64_r64" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="r64" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_imm8" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="-127" maximum="128" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64_imm8" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="integer"  base="dec" minimum="-127" maximum="128" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_r64_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_imm16" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m64_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64_imm16" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="integer"  base="dec" minimum="-32768" maximum="32767" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_r64_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_imm32" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_m64_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64_imm32" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>
						</macro>
						<macro id="_legacy_r64_imm64" weight="1" >
							<expression> 
								<param ref="ins"/>	$0x<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_imm64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="bitArray" length="64" base="hex" name="op1" />
							</parameters>
						</macro>						
						<macro id="_legacy_m64_m64" weight="0" >  <!-- special -->
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64_m64" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r64_m8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_m8" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>
						<macro id="_legacy_r64_r8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_r8" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="r8" name="op1" />
							</parameters>
						</macro>




						<!-- legacy one operand -->
						<macro id="_legacy_r8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r8" name="ins" />
								<item type="definedType" ref="r8" name="op1" />	
							</parameters>
						</macro>						
						<macro id="_legacy_r16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16" name="ins" />
								<item type="definedType" ref="r16" name="op1" />	
							</parameters>
						</macro>						
						<macro id="_legacy_r32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32" name="ins" />
								<item type="definedType" ref="r32" name="op1" />	
							</parameters>
						</macro>
						<macro id="_legacy_r64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64" name="ins" />
								<item type="definedType" ref="r64" name="op1" />	
							</parameters>
						</macro>
						<macro id="_legacy_m8" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m8" name="ins" />
								<item type="definedType" ref="m8" name="op1" />	
							</parameters>
						</macro>
						<macro id="_legacy_m16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m16" name="ins" />
								<item type="definedType" ref="m16" name="op1" />	
							</parameters>
						</macro>
						<macro id="_legacy_m32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m32" name="ins" />
								<item type="definedType" ref="m32" name="op1" />	
							</parameters>
						</macro>												
						<macro id="_legacy_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m64" name="ins" />
								<item type="definedType" ref="m64" name="op1" />	
							</parameters>
						</macro>						
						<macro id="_legacy_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_m128" name="ins" />
								<item type="definedType" ref="m128" name="op1" />	
							</parameters>
						</macro>


						<!-- legacy no operand -->
						<macro id="_legacy_" weight="1">
							<expression>
								<param ref="ins"/>	
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_" name="ins" />
							</parameters>
						</macro>
						

						<macro id="_legacy_jcc" weight="0">
							<expression> 
								<param ref="ins"/>	<param ref="target"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_jcc" name="ins" />
								<item type="innerGenericLabel" name="target" itself="true" prologue="true" epilogue="true"/>
							</parameters>
						</macro>

						<!-- legacy three operands -->
						<macro id="_legacy_r16_r16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_r16_imm8" name="ins" />
								<item type="definedType" ref="r16" name="op3" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_rm16_r16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_rm16_r16_imm8" name="ins" />
								<item type="definedType" ref="rm16" name="op3" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r16_m16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_m16_imm8" name="ins" />
								<item type="definedType" ref="r16" name="op3" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r32_r32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_r32_imm8" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_rm32_r32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_rm32_r32_imm8" name="ins" />
								<item type="definedType" ref="rm32" name="op3" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r32_m32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_m32_imm8" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r64_r64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_r64_imm8" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_rm64_r64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_rm64_r64_imm8" name="ins" />
								<item type="definedType" ref="rm64" name="op3" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r64_m64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_m64_imm8" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r16_r16_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_r16_imm16" name="ins" />
								<item type="definedType" ref="r16" name="op3" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="65535" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r16_m16_imm16" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r16_m16_imm16" name="ins" />
								<item type="definedType" ref="r16" name="op3" />
								<item type="definedType" ref="m16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="65536" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r32_r32_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_r32_imm32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r32_m32_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r32_m32_imm32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r64_r64_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_r64_imm32" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>						
						</macro>
						<macro id="_legacy_r64_m64_imm32" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="legacy_r64_m64_imm32" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="integer"  base="dec" minimum="-2147483648" maximum="2147483647" name="op1"/>
							</parameters>						
						</macro>


						<!-- fpu -->
						<macro id="_fpu_" weight="0" >
							<expression> 
								<param ref="ins"/> 
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_" name="ins" />	
							</parameters>
						</macro>						
						<macro id="_fpu_stx" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_stx" name="ins" />
								<item type="definedType" ref="stx" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m16int" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m16int" name="ins" />
								<item type="definedType" ref="m16int" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m32fp" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m32fp" name="ins" />
								<item type="definedType" ref="m32fp" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m32int" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m32int" name="ins" />
								<item type="definedType" ref="m32int" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m64int" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m64int" name="ins" />
								<item type="definedType" ref="m64int" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m64fp" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m64fp" name="ins" />
								<item type="definedType" ref="m64fp" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_m80" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_m80" name="ins" />
								<item type="definedType" ref="m80" name="op1" />	
							</parameters>
						</macro>
						<macro id="_fpu_stx_st0" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_stx_st0" name="ins" />
								<item type="definedType" ref="stx" name="op2" />
								<item type="definedType" ref="st0" name="op1" />
							</parameters>
						</macro>
						<macro id="_fpu_st0_stx" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fpu_st0_stx" name="ins" />
								<item type="definedType" ref="st0" name="op2" />
								<item type="definedType" ref="stx" name="op1" />
							</parameters>
						</macro>


						<!-- adx -->
						<macro id="_adx_r32_rm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="adx_r32_rm32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_adx_r64_rm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="adx_r64_rm64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>


						<!-- bmi1 -->
						<macro id="_bmi1_r16_rm16" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r16_rm16" name="ins" />
								<item type="definedType" ref="r16" name="op2" />
								<item type="definedType" ref="rm16" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi1_r32_rm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r32_rm32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi1_r64_rm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r64_rm64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi1_r32_r32_rm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r32_r32_rm32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>					
						<macro id="_bmi1_r64_r64_rm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r64_r64_rm64" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi1_r32_rm32_r32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r32_rm32_r32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="definedType" ref="r32" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi1_r64_rm64_r64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi1_r64_rm64_r64" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="definedType" ref="r64" name="op1" />
							</parameters>
						</macro>


						<!-- bmi2 -->
						<macro id="_bmi2_r32_rm32_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r32_rm32_imm8" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_bmi2_r64_rm64_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r64_rm64_imm8" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_bmi2_r32_rm32_r32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r32_rm32_r32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="definedType" ref="r32" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi2_r64_rm64_r64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r64_rm64_r64" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="definedType" ref="r64" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi2_r32_r32_rm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r32_r32_rm32" name="ins" />
								<item type="definedType" ref="r32" name="op3" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_bmi2_r64_r64_rm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="bmi2_r64_r64_rm64" name="ins" />
								<item type="definedType" ref="r64" name="op3" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>




						<!-- mpx -->
						<macro id="_mpx_bnd_r32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_r32" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="r32" name="op1" />
							</parameters>
						</macro>
						<macro id="_mpx_bnd_m32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_m32" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>		
						<macro id="_mpx_bnd_r64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_r64" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="r64" name="op1" />
							</parameters>			
						</macro>
						<macro id="_mpx_bnd_m64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_m64" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>			
						</macro>
						<macro id="_mpx_m64_bnd" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_m64_bnd" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="bnd" name="op1" />
							</parameters>			
						</macro>
						<macro id="_mpx_bnd_bnd" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_bnd" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="bnd" name="op1" />
							</parameters>			
						</macro>
						<macro id="_mpx_bnd_m128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_bnd_m128" name="ins" />
								<item type="definedType" ref="bnd" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>			
						</macro>
						<macro id="_mpx_m128_bnd" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="mpx_m128_bnd" name="ins" />
								<item type="definedType" ref="m128" name="op2" />
								<item type="definedType" ref="bnd" name="op1" />
							</parameters>			
						</macro>


						<!-- cldemote -->
						<macro id="_cldemote_m8" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="cldemote_m8" name="ins" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>

						<!-- clwb -->
						<macro id="_clwb_m8" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>
							</expression>
							<parameters>
								<item type="definedType" ref="clwb_m8" name="ins" />
								<item type="definedType" ref="m8" name="op1" />
							</parameters>
						</macro>


						<!-- aes -->
						<macro id="_aes_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="aes_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>					
						<macro id="_aes_xmm_xmmm128_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="aes_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>	

						<!-- aesavx -->
						<macro id="_aesavx_xmm_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="aesavx_xmm_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>						
						<macro id="_aesavx_xmm_xmmm128_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="aesavx_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_aesavx_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="aesavx_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>


						<!-- vaes -->
						<macro id="_vaes_ymm_ymm_ymmm256" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="vaes_ymm_ymm_ymmm256" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymmm256" name="op1" />
							</parameters>
						</macro>
						
						
						<!-- sha -->
						<macro id="_sha_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sha_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
		
							</parameters>
						</macro>
						<macro id="_sha_xmm_xmmm128_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sha_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>


						<!-- simd mmx -->
						<macro id="_simd_mmx_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_imm8" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_simd_mmx_rm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_rm32" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_mmx_rm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_rm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_rm32_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_rm32_mmx" name="ins" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_rm64_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_rm64_mmx" name="ins" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_m64_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_m64_mmx" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_mmx_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_mmxm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_mmxm64_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmxm64_mmx" name="ins" />
								<item type="definedType" ref="mmxm64" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>																														
						<macro id="_simd_mmx_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_xmmm128" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_mmx_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_xmmm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_mmx_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_xmm" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_simd_xmm_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_xmm_mmx" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>												
						<macro id="_simd_xmm_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_xmm_mmxm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>
						
						<macro id="_simd_mmx_mmxm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="simd_mmx_mmxm64_imm8" name="ins" />
								<item type="definedType" ref="mmx" name="op3" />
								<item type="definedType" ref="mmxm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
					


						<!-- sse -->
						<macro id="_sse_mmx_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_mmx_mmxm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_reg_mmx" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_reg_mmx" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="mmx" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_reg_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_reg_xmm" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_r32_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_r32_xmmm32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_r64_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_r64_xmmm32" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmm_m32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_m32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>												
						<macro id="_sse_xmm_rm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_rm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmm_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_m64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_m64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_m64_xmm" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmm_rm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_rm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmm_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>												
						<macro id="_sse_xmm_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmmm32_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmmm32_xmm" name="ins" />
								<item type="definedType" ref="xmmm32" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_m128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_m128_xmm" name="ins" />
								<item type="definedType" ref="m128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>												
						<macro id="_sse_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse_xmmm128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmmm128_xmm" name="ins" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						
						<macro id="_sse_mmx_r32m16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_mmx_r32m16_imm8" name="ins" />
								<item type="definedType" ref="mmx" name="op3" />
								<item type="definedType" ref="r32m16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>						
						<macro id="_sse_reg_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_reg_xmm_imm8" name="ins" />
								<item type="definedType" ref="reg" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse_xmm_xmmm32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmmm32_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse_xmm_xmmm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmmm64_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>


						<!-- sse2 -->
						<macro id="_sse2_mmx_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_mmx_mmxm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_reg_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_reg_xmm" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_r32_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_r32_xmmm64" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_r64_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_r64_xmmm64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_rm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_rm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_rm32_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_rm32_xmm" name="ins" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_rm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_rm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_m64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_m64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_m64_xmm" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_rm64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_rm64_xmm" name="ins" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>																																			
						<macro id="_sse2_xmm_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmmm64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmmm64_xmm" name="ins" />
								<item type="definedType" ref="xmmm64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_m128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_m128_xmm" name="ins" />
								<item type="definedType" ref="m128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>						
						<macro id="_sse2_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse2_xmmm128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmmm128_xmm" name="ins" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>

						<macro id="_sse2_xmm_r32m16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_r32m16_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="r32m16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>						
						<macro id="_sse2_reg_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_reg_xmm_imm8" name="ins" />
								<item type="definedType" ref="reg" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse2_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse2_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>


						<!-- sse3 -->
						<macro id="_sse3_mmx_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse3_mmx_mmxm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>						
						<macro id="_sse3_xmm_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse3_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse3_xmm_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse3_xmm_m128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>

						<macro id="_sse3_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse3_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>

						<!-- ssse3 -->
						<macro id="_ssse3_mmx_mmxm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="ssse3_mmx_mmxm64" name="ins" />
								<item type="definedType" ref="mmx" name="op2" />
								<item type="definedType" ref="mmxm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_ssse3_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="ssse3_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_ssse3_mmx_mmxm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="ssse3_mmx_mmxm64_imm8" name="ins" />
								<item type="definedType" ref="mmx" name="op3" />
								<item type="definedType" ref="mmxm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_ssse3_mmx_mmxm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="ssse3_mmx_mmxm128_imm8" name="ins" />
								<item type="definedType" ref="mmx" name="op3" />
								<item type="definedType" ref="mmxm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>


						<!-- sse41 -->
						<macro id="_sse41_xmm_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_m128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm16" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm16" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_sse41_regm8_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_regm8_xmm_imm8" name="ins" />
								<item type="definedType" ref="regm8" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_regm16_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_regm16_xmm_imm8" name="ins" />
								<item type="definedType" ref="regm16" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>												
						<macro id="_sse41_rm32_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_rm32_xmm_imm8" name="ins" />
								<item type="definedType" ref="rm32" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_rm32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_rm32_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_r32m8_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_r32m8_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="r32m8" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_rm64_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_rm64_xmm_imm8" name="ins" />
								<item type="definedType" ref="rm64" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_rm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_rm64_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm32_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm64_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>												
						<macro id="_sse41_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_sse41_xmm_xmmm128_xmm0" weight="1" >
							<expression> 
								<param ref="ins"/>	%xmm0, <param ref="op1"/>, <param ref="op2"/> 
							</expression>
							<parameters>
								<item type="definedType" ref="sse41_xmm_xmmm128_xmm0" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>


						<!-- sse42 -->
						<macro id="_sse42_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse42_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>						
						<macro id="_sse42_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="sse42_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>


						<!-- avx -->
						<macro id="_avx_" weight="1" >
							<expression> 
								<param ref="ins"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_" name="ins" />
							</parameters>
						</macro>
						<macro id="_avx_reg_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_reg_xmm" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_m32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_m32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>							
						<macro id="_avx_xmm_rm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_rm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_rm32_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_rm32_xmm" name="ins" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m32_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m32_xmm" name="ins" />
								<item type="definedType" ref="m32" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_rm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_rm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m64_xmm" name="ins" />
								<item type="definedType" ref="m64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_m64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_rm64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_rm64_xmm" name="ins" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>							
						<macro id="_avx_xmm_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_m128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m128_xmm" name="ins" />
								<item type="definedType" ref="m128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>						
						<macro id="_avx_r32_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_r32_xmmm32" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_r64_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_r64_xmmm32" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>												
						<macro id="_avx_r32_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_r32_xmmm64" name="ins" />
								<item type="definedType" ref="r32" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_r64_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_r64_xmmm64" name="ins" />
								<item type="definedType" ref="r64" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmmm16" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmmm16" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm16" name="op1" />
							</parameters>
						</macro>												
						<macro id="_avx_xmm_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmmm64_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmmm64_xmm" name="ins" />
								<item type="definedType" ref="xmmm64" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>			
						<macro id="_avx_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmmm128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmmm128_xmm" name="ins" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_reg_ymm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_reg_ymm" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_xmmm128" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_m32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_m32" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_m64" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_m128" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_m256" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_m256" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m256" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m256_ymm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m256_ymm" name="ins" />
								<item type="definedType" ref="m256" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>												
						<macro id="_avx_ymm_ymmm256" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymmm256" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymmm256" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymmm256_ymm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymmm256_ymm" name="ins" />
								<item type="definedType" ref="ymmm256" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>										
						<macro id="_avx_xmm_xmm_rm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_rm32" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_reg_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_reg_xmm_imm8" name="ins" />
								<item type="definedType" ref="reg" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_regm8_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_regm8_xmm_imm8" name="ins" />
								<item type="definedType" ref="regm8" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_regm16_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_regm16_xmm_imm8" name="ins" />
								<item type="definedType" ref="regm16" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_rm32_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_rm32_xmm_imm8" name="ins" />
								<item type="definedType" ref="rm32" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_rm64_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_rm64_xmm_imm8" name="ins" />
								<item type="definedType" ref="rm64" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>						
						<macro id="_avx_xmm_xmm_rm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_rm64" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="rm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_m64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_m64" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_m128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_m128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m128_xmm_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m128_xmm_xmm" name="ins" />
								<item type="definedType" ref="m128" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>																		
						<macro id="_avx_xmm_xmm_xmmm32" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>										
						<macro id="_avx_xmm_xmm_xmmm64" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3"/>
								<item type="definedType" ref="xmm" name="op2"/>
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op3"/>
								<item type="definedType" ref="xmmm128" name="op2"/>
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>																		
						<macro id="_avx_xmm_xmm_xmmm128" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_xmmm128_ymm_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmmm128_ymm_imm8" name="ins" />
								<item type="definedType" ref="xmmm128" name="op3"/>
								<item type="definedType" ref="ymm" name="op2"/>
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymmm256_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymmm256_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op3"/>
								<item type="definedType" ref="ymmm256" name="op2"/>
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymm_m256" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymm_m256" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m256" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_m256_ymm_ymm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_m256_ymm_ymm" name="ins" />
								<item type="definedType" ref="m256" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymm_ymmm256" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymm_ymmm256" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymmm256" name="op1" />
							</parameters>
						</macro>


						<macro id="_avx_xmm_xmm_r32m8_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_r32m8_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="r32m8" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_r32m16_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_r32m16_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="r32m16" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_rm32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_rm32_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="rm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_rm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_rm64_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="rm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>						
						<macro id="_avx_xmm_xmm_xmmm64_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm64_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm64" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4"/>
								<item type="definedType" ref="xmm" name="op3"/>
								<item type="definedType" ref="xmmm128" name="op2"/>
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_xmmm128_xmm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm128_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op4"/>
								<item type="definedType" ref="xmm" name="op3"/>
								<item type="definedType" ref="xmmm128" name="op2"/>
								<item type="definedType" ref="xmm" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_xmm_xmm_xmmm32_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_xmm_xmm_xmmm32_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm32" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymm_xmmm128_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op4" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymm_ymmm256_imm8" weight="1" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymm_ymmm256_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op4" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymmm256" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx_ymm_ymm_ymmm256_ymm" weight="1" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx_ymm_ymm_ymmm256_ymm" name="ins" />
								<item type="definedType" ref="ymm" name="op4" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymmm256" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>
						


						<!-- avx2 -->
						<macro id="_avx2_xmm_xmm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmm" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmmm8" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmmm8" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm8" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmmm16" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmmm16" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm16" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmmm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmmm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_reg_ymm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_reg_ymm" name="ins" />
								<item type="definedType" ref="reg" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmm" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmmm8" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmmm8" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm8" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmmm16" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmmm16" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm16" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmmm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmmm32" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmmm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmmm64" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_xmmm128" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_m128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_m128" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_m256" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_m256" name="ins" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m256" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmm_m128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmm_m128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="m128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_xmm_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_m128_xmm_xmm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_m128_xmm_xmm" name="ins" />
								<item type="definedType" ref="m128" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_ymm_m256" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymm_m256" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="m256" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_m256_ymm_ymm" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_m256_ymm_ymm" name="ins" />
								<item type="definedType" ref="m256" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymm" name="op1" />
							</parameters>
						</macro>
						<macro id="_avx2_ymm_ymm_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymm_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx2_xmmm128_ymm_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmmm128_ymm_imm8" name="ins" />
								<item type="definedType" ref="xmmm128" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx2_ymm_ymmm256_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymmm256_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymmm256" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
					
						<macro id="_avx2_ymm_ymm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymm_xmmm128" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
					
						<macro id="_avx2_ymm_ymm_ymmm256" weight="0" >
								<expression> 
									<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
								</expression>
								<parameters>
									<item type="definedType" ref="avx2_ymm_ymm_ymmm256" name="ins" />
									<item type="definedType" ref="ymm" name="op3" />
									<item type="definedType" ref="ymm" name="op2" />
									<item type="definedType" ref="ymmm256" name="op1" />
								</parameters>
						</macro>
						<macro id="_avx2_xmm_xmm_xmmm128_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_xmm_xmm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="xmm" name="op4" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx2_ymm_ymm_xmmm128_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymm_xmmm128_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op4" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="xmmm128" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>	
						<macro id="_avx2_ymm_ymm_ymmm256_imm8" weight="0" >
							<expression> 
								<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
							</expression>
							<parameters>
								<item type="definedType" ref="avx2_ymm_ymm_ymmm256_imm8" name="ins" />
								<item type="definedType" ref="ymm" name="op4" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymmm256" name="op2" />
								<item type="integer"  base="dec" minimum="0" maximum="255" name="op1"/>
							</parameters>
						</macro>
						<macro id="_avx2_ymm_ymm_ymmm256_ymm" weight="0" >
								<expression> 
									<param ref="ins"/>	$<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>, <param ref="op4"/>
								</expression>
								<parameters>
									<item type="definedType" ref="avx2_ymm_ymm_ymmm256_ymm" name="ins" />
									<item type="definedType" ref="ymm" name="op4" />
									<item type="definedType" ref="ymm" name="op3" />
									<item type="definedType" ref="ymmm256" name="op2" />
									<item type="definedType" ref="ymm" name="op1" />
								</parameters>
						</macro>


						<!-- fma -->
						<macro id="_fma_xmm_xmm_xmmm32" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fma_xmm_xmm_xmmm32" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm32" name="op1" />
							</parameters>
						</macro>
						<macro id="_fma_xmm_xmm_xmmm64" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fma_xmm_xmm_xmmm64" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm64" name="op1" />
							</parameters>
						</macro>
						<macro id="_fma_xmm_xmm_xmmm128" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fma_xmm_xmm_xmmm128" name="ins" />
								<item type="definedType" ref="xmm" name="op3" />
								<item type="definedType" ref="xmm" name="op2" />
								<item type="definedType" ref="xmmm128" name="op1" />
							</parameters>
						</macro>
						<macro id="_fma_ymm_ymm_ymmm256" weight="0" >
							<expression> 
								<param ref="ins"/>	<param ref="op1"/>, <param ref="op2"/>, <param ref="op3"/>
							</expression>
							<parameters>
								<item type="definedType" ref="fma_ymm_ymm_ymmm256" name="ins" />
								<item type="definedType" ref="ymm" name="op3" />
								<item type="definedType" ref="ymm" name="op2" />
								<item type="definedType" ref="ymmm256" name="op1" />
							</parameters>
						</macro>



					</macros>
				</subSection>
			</subSections>   
		</section>
	</sections>
</constraints>
